<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>elijah</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-15T10:31:28.864Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>elijah</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CNN-UNet总结</title>
    <link href="http://example.com/2022/10/15/cnn/CNN-UNet%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/10/15/cnn/CNN-UNet%E6%80%BB%E7%BB%93/</id>
    <published>2022-10-15T10:29:38.000Z</published>
    <updated>2022-10-15T10:31:28.864Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>论文地址：<br><a href="https://arxiv.org/abs/1505.04597">https://arxiv.org/abs/1505.04597</a><br>我的实现方法与原论文略有差异</p></blockquote><h3 id="1-UNet简介"><a href="#1-UNet简介" class="headerlink" title="1. UNet简介"></a>1. UNet简介</h3><p>UNet 的初衷是为了解决医学图像分割的问题，在解决细胞层面的分割的任务方面，其在 2015 年的 ISBI cell tracking 比赛中获得了多个第一。之后，UNet 凭借其突出的分割效果而被广泛应用在语义分割的各个方向（如卫星图像分割，工业瑕疵检测等）。<br>UNet的encoder下采样4次，一共下采样16倍，对称地，其decoder也相应上采样4次，将encoder得到的高级语义特征图恢复到原图片的分辨率。相比于FCN和Deeplab等，UNet共进行了4次上采样，并在同一个stage使用了skip connection，而不是直接在高级语义特征上进行监督和loss反传，这样就保证了最后恢复出来的特征图融合了更多的low-level的feature，也使得不同scale的feature得到了的融合，从而可以进行多尺度预测和DeepSupervision。4次上采样也使得分割图恢复边缘等信息更加精细。</p><h3 id="2-UNet的主要结构"><a href="#2-UNet的主要结构" class="headerlink" title="2. UNet的主要结构"></a>2. UNet的主要结构</h3><p><img src="https://pic1.imgdb.cn/item/634a8af916f2c2beb1659c67.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=GcqgG&amp;originHeight=982&amp;originWidth=1317&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="><br>假设输入的图片大小为3x160x240，模型的执行过程如下：<br><img src="https://pic1.imgdb.cn/item/634a8af916f2c2beb1659c6d.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=Fp6zn&amp;originHeight=1017&amp;originWidth=1035&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><h3 id="3-UNet的代码实现"><a href="#3-UNet的代码实现" class="headerlink" title="3. UNet的代码实现"></a>3. UNet的代码实现</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms.functional <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoubleConv</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channels, out_channels, mid_channels=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(DoubleConv, self).__init__()</span><br><span class="line">        <span class="keyword">if</span> mid_channels <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            mid_channels = out_channels</span><br><span class="line">        <span class="comment"># 卷积后图片大小保持不变</span></span><br><span class="line">        self.conv = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels, mid_channels, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>, bias=<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm2d(mid_channels),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line"></span><br><span class="line">            nn.Conv2d(mid_channels, out_channels, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>, bias=<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm2d(out_channels),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.conv(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channels=<span class="number">3</span>, out_channels=<span class="number">1</span>, features=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(UNet, self).__init__()</span><br><span class="line">        <span class="keyword">if</span> features <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            features = [<span class="number">64</span>, <span class="number">128</span>, <span class="number">256</span>, <span class="number">512</span>]</span><br><span class="line">        self.ups = nn.ModuleList()</span><br><span class="line">        self.downs = nn.ModuleList()</span><br><span class="line">        self.pool = nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 下采样</span></span><br><span class="line">        <span class="comment"># 配合池化层达到图片大小减半的效果</span></span><br><span class="line">        <span class="keyword">for</span> feature <span class="keyword">in</span> features:</span><br><span class="line">            self.downs.append(DoubleConv(in_channels, feature))</span><br><span class="line">            in_channels = feature</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 上采样</span></span><br><span class="line">        <span class="comment"># 通道数降低一倍，图片大小增加一倍</span></span><br><span class="line">        <span class="keyword">for</span> feature <span class="keyword">in</span> <span class="built_in">reversed</span>(features):</span><br><span class="line">            <span class="comment"># 通道数减半，图片大小增加一倍</span></span><br><span class="line">            <span class="comment"># # 转置卷积</span></span><br><span class="line">            <span class="comment"># # 通道数减半，图片大小减半</span></span><br><span class="line">            <span class="comment"># self.ups.append(nn.ConvTranspose2d(feature * 2, feature, kernel_size=2, stride=2))</span></span><br><span class="line">            <span class="comment"># # 通道数、图片大小不变</span></span><br><span class="line">            <span class="comment"># self.ups.append(DoubleConv(feature * 2, feature))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 双线性插值</span></span><br><span class="line">            <span class="comment"># 图片大小增加一倍</span></span><br><span class="line">            <span class="comment"># 通道数减半</span></span><br><span class="line">            self.ups.append(nn.Sequential(</span><br><span class="line">                nn.Upsample(scale_factor=<span class="number">2</span>, mode=<span class="string">'bilinear'</span>, align_corners=<span class="literal">True</span>),</span><br><span class="line">                nn.Conv2d(feature * <span class="number">2</span>, feature, kernel_size=<span class="number">1</span>)</span><br><span class="line">            ))</span><br><span class="line">            <span class="comment"># 通道数减半</span></span><br><span class="line">            self.ups.append(DoubleConv(feature * <span class="number">2</span>, feature))</span><br><span class="line"></span><br><span class="line">        self.bottleneck = DoubleConv(features[-<span class="number">1</span>], features[-<span class="number">1</span>] * <span class="number">2</span>)</span><br><span class="line">        self.final_conv = nn.Conv2d(features[<span class="number">0</span>], out_channels, kernel_size=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        skip_connections = []</span><br><span class="line">        <span class="keyword">for</span> down <span class="keyword">in</span> self.downs:</span><br><span class="line">            x = down(x)</span><br><span class="line">            skip_connections.append(x)</span><br><span class="line">            x = self.pool(x)</span><br><span class="line">        <span class="comment"># 通道数变为1024</span></span><br><span class="line">        <span class="comment"># 图片的大小保持不变</span></span><br><span class="line">        x = self.bottleneck(x)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># skip_connections逆序</span></span><br><span class="line">        skip_connections = skip_connections[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># up里面有两层结构，所以步长为2</span></span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(self.ups), <span class="number">2</span>):</span><br><span class="line">            x = self.ups[idx](x)</span><br><span class="line">            skip_connection = skip_connections[idx // <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 当使用转置卷积时，假设输入的是161x161，在经过四次的上采样后x.shape=[3, 64, 160, 160]，skip_connection.shape=[3, 64, 161, 161]</span></span><br><span class="line">            <span class="comment"># 需要将x的形状强制转换成skip_connection的形状</span></span><br><span class="line">            <span class="comment"># 相当于对每个通道都添加了一个像素，所以影响不大</span></span><br><span class="line">            <span class="keyword">if</span> x.shape != skip_connection.shape:</span><br><span class="line">                x = tf.resize(x, size=skip_connection.shape[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">            concat_skip = torch.cat((skip_connection, x), dim=<span class="number">1</span>)</span><br><span class="line">            x = self.ups[idx + <span class="number">1</span>](concat_skip)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.final_conv(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    input_x = torch.randn((<span class="number">3</span>, <span class="number">3</span>, <span class="number">160</span>, <span class="number">240</span>))</span><br><span class="line">    model = UNet(in_channels=<span class="number">3</span>, out_channels=<span class="number">1</span>)</span><br><span class="line">    preds = model(input_x)</span><br><span class="line">    <span class="built_in">print</span>(preds.shape)</span><br></pre></td></tr></tbody></table></figure><h3 id="4-参考资料"><a href="#4-参考资料" class="headerlink" title="4. 参考资料"></a>4. 参考资料</h3><ol><li><a href="https://blog.csdn.net/weixin_39848097/article/details/111738723">https://blog.csdn.net/weixin_39848097/article/details/111738723</a></li><li><a href="https://www.cxymm.net/article/qq_41731861/120528269">https://www.cxymm.net/article/qq_41731861/120528269</a></li><li><a href="https://www.bilibili.com/video/BV1Vq4y127fB/?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1Vq4y127fB/?spm_id_from=333.999.0.0</a></li><li><a href="https://www.bilibili.com/video/BV1rq4y1w7xM/?spm_id_from=333.999.0.0&amp;vd_source=d82ae215516c88c81730e01361192e5e">https://www.bilibili.com/video/BV1rq4y1w7xM/?spm_id_from=333.999.0.0&amp;vd_source=d82ae215516c88c81730e01361192e5e</a></li><li><a href="https://github.com/WZMIAOMIAO/deep-learning-for-image-processing/tree/master/pytorch_segmentation/unet">https://github.com/WZMIAOMIAO/deep-learning-for-image-processing/tree/master/pytorch_segmentation/unet</a></li><li><a href="https://github.com/aladdinpersson/Machine-Learning-Collection/tree/master/ML/Pytorch/image_segmentation/semantic_segmentation_unet">https://github.com/aladdinpersson/Machine-Learning-Collection/tree/master/ML/Pytorch/image_segmentation/semantic_segmentation_unet</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;论文地址：&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1505.04597&quot;&gt;https://arxiv.org/abs/1505.04597&lt;/a&gt;&lt;br&gt;我的实现方法与原论文略有差异&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="UNet" scheme="http://example.com/categories/UNet/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="UNet" scheme="http://example.com/tags/UNet/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="CNN" scheme="http://example.com/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>CNN-ResNet总结</title>
    <link href="http://example.com/2022/10/15/cnn/CNN-ResNet%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/10/15/cnn/CNN-ResNet%E6%80%BB%E7%BB%93/</id>
    <published>2022-10-15T04:06:22.000Z</published>
    <updated>2022-10-15T10:31:34.404Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>论文地址：<br><a href="https://arxiv.org/abs/1512.03385">https://arxiv.org/abs/1512.03385</a></p></blockquote><h3 id="1-ResNet的主要贡献"><a href="#1-ResNet的主要贡献" class="headerlink" title="1. ResNet的主要贡献"></a>1. ResNet的主要贡献</h3><ol><li>提出了Residual模块，在一定程度上解决了网络不断加深产生的梯度消失（或梯度爆炸）、模型退化等问题；</li><li>使用BN层进行训练。</li></ol><h3 id="2-ResNet的主要结构"><a href="#2-ResNet的主要结构" class="headerlink" title="2. ResNet的主要结构"></a>2. ResNet的主要结构</h3><h4 id="2-1-ResNet的结构"><a href="#2-1-ResNet的结构" class="headerlink" title="2.1 ResNet的结构"></a>2.1 ResNet的结构</h4><p><img src="https://pic1.imgdb.cn/item/630877d016f2c2beb1d344bc.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=WcOAH&amp;originHeight=498&amp;originWidth=1143&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="><br>ResNet的结构主要可以分为两个类型，一种是18/34层的架构，另一种是50/101/152层的架构：<br><img src="https://pic1.imgdb.cn/item/634a10ae16f2c2beb19b4014.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=AUYQE&amp;originHeight=586&amp;originWidth=631&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="><br>但是在实际的应用中，conv3-5结构的第一层需要接收的数据形状与前一层传递过来的数据形状并不相同，所以conv3-5需要对上述结构进行改变（以conv3为例）：<br><img src="https://pic1.imgdb.cn/item/634a10ad16f2c2beb19b3e11.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=q6tta&amp;originHeight=527&amp;originWidth=706&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><h4 id="2-2-ResNet50的执行过程"><a href="#2-2-ResNet50的执行过程" class="headerlink" title="2.2 ResNet50的执行过程"></a>2.2 ResNet50的执行过程</h4><blockquote><p>输入的图片大小为3x224x224</p></blockquote><p><img src="https://pic1.imgdb.cn/item/634a10ae16f2c2beb19b3fa0.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=wKWnO&amp;originHeight=1571&amp;originWidth=920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3. 代码实现"></a>3. 代码实现</h3><h4 id="3-1-模型代码"><a href="#3-1-模型代码" class="headerlink" title="3.1 模型代码"></a>3.1 模型代码</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">模型的下载地址</span></span><br><span class="line"><span class="string">model_urls = {</span></span><br><span class="line"><span class="string">    'resnet18': 'https://download.pytorch.org/models/resnet18-5c106cde.pth',</span></span><br><span class="line"><span class="string">    'resnet34': 'https://download.pytorch.org/models/resnet34-333f7ec4.pth',</span></span><br><span class="line"><span class="string">    'resnet50': 'https://download.pytorch.org/models/resnet50-19c8e357.pth',</span></span><br><span class="line"><span class="string">    'resnet101': 'https://download.pytorch.org/models/resnet101-5d3b4d8f.pth',</span></span><br><span class="line"><span class="string">    'resnet152': 'https://download.pytorch.org/models/resnet152-b121ed2d.pth',</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.models</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 18和34层的残差结构</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasicBlock</span>(nn.Module):</span><br><span class="line">    expansion = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channel, out_channel, stride=<span class="number">1</span>, downsample=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(BasicBlock, self).__init__()</span><br><span class="line">        <span class="comment"># stride = 1代表实线结构，输出等于输入</span></span><br><span class="line">        <span class="comment"># stride = 2代表虚线结构，输入减半</span></span><br><span class="line">        <span class="comment"># bias = False使用BN不需要偏执</span></span><br><span class="line">        self.conv1 = nn.Conv2d(in_channels=in_channel, out_channels=out_channel,</span><br><span class="line">                               kernel_size=<span class="number">3</span>, stride=stride, padding=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn1 = nn.BatchNorm2d(out_channel)</span><br><span class="line"></span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Conv2d(in_channels=out_channel, out_channels=out_channel,</span><br><span class="line">                               kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn2 = nn.BatchNorm2d(out_channel)</span><br><span class="line">        self.downsample = downsample</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># 捷径分支</span></span><br><span class="line">        identity = x</span><br><span class="line">        <span class="comment"># 虚线残差结构</span></span><br><span class="line">        <span class="keyword">if</span> self.downsample <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            identity = self.downsample(x)</span><br><span class="line"></span><br><span class="line">        out = self.conv1(x)</span><br><span class="line">        out = self.bn1(out)</span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        out = self.conv2(out)</span><br><span class="line">        out = self.bn2(out)</span><br><span class="line"></span><br><span class="line">        out += identity</span><br><span class="line">        out = self.relu(out)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bottleneck</span>(nn.Module):</span><br><span class="line">    <span class="comment"># 卷积核的个数扩充了四倍</span></span><br><span class="line">    expansion = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channel, out_channel, stride=<span class="number">1</span>, downsample=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Bottleneck, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(in_channels=in_channel, out_channels=out_channel, kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn1 = nn.BatchNorm2d(out_channel)</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Conv2d(in_channels=out_channel, out_channels=out_channel, stride=stride, kernel_size=<span class="number">3</span>,</span><br><span class="line">                               padding=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn2 = nn.BatchNorm2d(out_channel)</span><br><span class="line"></span><br><span class="line">        self.conv3 = nn.Conv2d(in_channels=out_channel, out_channels=out_channel * self.expansion, kernel_size=<span class="number">1</span>,</span><br><span class="line">                               stride=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn3 = nn.BatchNorm2d(out_channel * self.expansion)</span><br><span class="line"></span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">        self.downsample = downsample</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        identity = x</span><br><span class="line">        <span class="keyword">if</span> self.downsample <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            identity = self.downsample(x)</span><br><span class="line"></span><br><span class="line">        out = self.conv1(x)</span><br><span class="line">        out = self.bn1(out)</span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        out = self.conv2(out)</span><br><span class="line">        out = self.bn2(out)</span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        out = self.conv3(out)</span><br><span class="line">        out = self.bn3(out)</span><br><span class="line"></span><br><span class="line">        out += identity</span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResNet</span>(nn.Module):</span><br><span class="line">    <span class="comment"># block: 残差结构</span></span><br><span class="line">    <span class="comment"># blocks_num: 残差结构的数目</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, block, blocks_num, num_classes, include_top=<span class="literal">True</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(ResNet, self).__init__()</span><br><span class="line">        self.include_top = include_top</span><br><span class="line">        self.in_channel = <span class="number">64</span></span><br><span class="line"></span><br><span class="line">        self.conv1 = nn.Conv2d(in_channels=<span class="number">3</span>, out_channels=self.in_channel, kernel_size=<span class="number">7</span>, stride=<span class="number">2</span>, padding=<span class="number">3</span>,</span><br><span class="line">                               bias=<span class="literal">False</span>)</span><br><span class="line">        self.bn1 = nn.BatchNorm2d(self.in_channel)</span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">        self.maxpool = nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>, padding=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        self.layer1 = self._make_layer(block, <span class="number">64</span>, blocks_num[<span class="number">0</span>])</span><br><span class="line">        self.layer2 = self._make_layer(block, <span class="number">128</span>, blocks_num[<span class="number">1</span>], stride=<span class="number">2</span>)</span><br><span class="line">        self.layer3 = self._make_layer(block, <span class="number">256</span>, blocks_num[<span class="number">2</span>], stride=<span class="number">2</span>)</span><br><span class="line">        self.layer4 = self._make_layer(block, <span class="number">512</span>, blocks_num[<span class="number">3</span>], stride=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.include_top:</span><br><span class="line">            self.avgpool = nn.AdaptiveAvgPool2d((<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">            self.fc = nn.Linear(<span class="number">512</span> * block.expansion, num_classes)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 模型参数的初始化</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(m, nn.Conv2d):</span><br><span class="line">                nn.init.kaiming_normal_(m.weight, mode=<span class="string">'fan_out'</span>, nonlinearity=<span class="string">'relu'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.BatchNorm2d):</span><br><span class="line">                nn.init.constant_(m.weight, <span class="number">1</span>)</span><br><span class="line">                nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.Linear):</span><br><span class="line">                nn.init.kaiming_uniform_(m.weight)</span><br><span class="line">                nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># channel: 卷积核个数</span></span><br><span class="line">    <span class="comment"># block_num: 该层一共多少个残差结构</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_make_layer</span>(<span class="params">self, block, channel, block_num, stride=<span class="number">1</span></span>):</span><br><span class="line">        <span class="comment"># downsample: 下采样结构</span></span><br><span class="line">        downsample = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 18和34层的网络结构的第一个layer会直接跳过这个if语句</span></span><br><span class="line">        <span class="keyword">if</span> stride != <span class="number">1</span> <span class="keyword">or</span> self.in_channel != channel * block.expansion:</span><br><span class="line">            downsample = nn.Sequential(</span><br><span class="line">                nn.Conv2d(self.in_channel, channel * block.expansion, kernel_size=<span class="number">1</span>, stride=stride, bias=<span class="literal">False</span>),</span><br><span class="line">                nn.BatchNorm2d(channel * block.expansion)</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">        layers = [block(self.in_channel, channel, downsample=downsample, stride=stride)]</span><br><span class="line">        <span class="comment"># 18和34层，输入通道数依然是64</span></span><br><span class="line">        <span class="comment"># 50、100和152，输入通道数扩大四倍</span></span><br><span class="line">        self.in_channel = channel * block.expansion</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, block_num):</span><br><span class="line">            layers.append(block(self.in_channel, channel))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nn.Sequential(*layers)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.bn1(x)</span><br><span class="line">        x = self.relu(x)</span><br><span class="line">        x = self.maxpool(x)</span><br><span class="line"></span><br><span class="line">        x = self.layer1(x)</span><br><span class="line">        x = self.layer2(x)</span><br><span class="line">        x = self.layer3(x)</span><br><span class="line">        x = self.layer4(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.include_top:</span><br><span class="line">            x = self.avgpool(x)</span><br><span class="line">            x = torch.flatten(x, <span class="number">1</span>)</span><br><span class="line">            x = self.fc(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resnet18</span>(<span class="params">num_classes=<span class="number">1000</span>, include_top=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">return</span> ResNet(BasicBlock, [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>], num_classes=num_classes, include_top=include_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resnet34</span>(<span class="params">num_classes=<span class="number">1000</span>, include_top=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">return</span> ResNet(BasicBlock, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>], num_classes=num_classes, include_top=include_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resnet50</span>(<span class="params">num_classes=<span class="number">1000</span>, include_top=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">return</span> ResNet(Bottleneck, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>], num_classes=num_classes, include_top=include_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resnet101</span>(<span class="params">num_classes=<span class="number">1000</span>, include_top=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">return</span> ResNet(Bottleneck, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">23</span>, <span class="number">3</span>], num_classes=num_classes, include_top=include_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resnet152</span>(<span class="params">num_classes=<span class="number">1000</span>, include_top=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">return</span> ResNet(Bottleneck, [<span class="number">3</span>, <span class="number">8</span>, <span class="number">36</span>, <span class="number">3</span>], num_classes=num_classes, include_top=include_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_resnet_dict</span>(<span class="params">num_classes=<span class="number">1000</span></span>):</span><br><span class="line">    resnet_dict = {</span><br><span class="line">        <span class="string">"resnet18"</span>: resnet18(num_classes=num_classes),</span><br><span class="line">        <span class="string">"resnet34"</span>: resnet34(num_classes=num_classes),</span><br><span class="line">        <span class="string">"resnet50"</span>: resnet50(num_classes=num_classes),</span><br><span class="line">        <span class="string">"resnet101"</span>: resnet101(num_classes=num_classes),</span><br><span class="line">        <span class="string">"resnet152"</span>: resnet152(num_classes=num_classes),</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> resnet_dict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_resnet</span>(<span class="params">resnet_type=<span class="string">"resnet50"</span>, num_classes=<span class="number">1000</span>, is_load_weight=<span class="literal">False</span>, model_path=<span class="literal">None</span></span>):</span><br><span class="line">    resnet_type = resnet_type.lower()</span><br><span class="line">    <span class="keyword">if</span> is_load_weight:</span><br><span class="line">        <span class="keyword">assert</span> model_path <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>, <span class="string">"model_path cannot be None"</span></span><br><span class="line">        model = get_resnet_dict()[resnet_type]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            device = <span class="string">"cuda"</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">"cpu"</span></span><br><span class="line">            missing_keys, unexpected_keys = model.load_state_dict(torch.load(model_path, map_location=device),</span><br><span class="line">                                                                  strict=<span class="literal">False</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"missing_keys: <span class="subst">{missing_keys}</span>"</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"unexpected_keys: <span class="subst">{unexpected_keys}</span>"</span>)</span><br><span class="line">            model.fc = nn.Linear(in_features=model.fc.in_features, out_features=num_classes)</span><br><span class="line">        <span class="keyword">except</span> RuntimeError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"模型文件加载失败"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        model = get_resnet_dict(num_classes=num_classes)[resnet_type]</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># net = resnet34()</span></span><br><span class="line">    input_x = torch.randn(<span class="number">1</span>, <span class="number">3</span>, <span class="number">224</span>, <span class="number">224</span>)</span><br><span class="line">    <span class="comment"># missing_keys, unexpected_keys = net.load_state_dict(torch.load("./resnet34-333f7ec4.pth"), strict=False)</span></span><br><span class="line">    <span class="comment"># print(f"{missing_keys} -- {unexpected_keys}")</span></span><br><span class="line">    <span class="comment"># print(get_resnet(num_classes=10, is_load_weight=True, model_path="./resnet50-19c8e357.pth"))</span></span><br><span class="line">    <span class="built_in">print</span>(get_resnet(resnet_type=<span class="string">"resnet50"</span>, num_classes=<span class="number">10</span>)(input_x).shape)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="3-2-训练代码"><a href="#3-2-训练代码" class="headerlink" title="3.2 训练代码"></a>3.2 训练代码</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> optim, nn, cuda</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> get_resnet</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">sysstr = platform.system()</span><br><span class="line"></span><br><span class="line">device = <span class="string">"cuda"</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">"cpu"</span></span><br><span class="line">num_workers = <span class="number">0</span> <span class="keyword">if</span> sysstr == <span class="string">"Windows"</span> <span class="keyword">else</span> <span class="number">12</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.Resize((<span class="number">224</span>, <span class="number">224</span>)),</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize(mean=[<span class="number">0.491</span>, <span class="number">0.482</span>, <span class="number">0.447</span>], std=[<span class="number">0.247</span>, <span class="number">0.243</span>, <span class="number">0.262</span>])</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">classes = (<span class="string">"airplane"</span>, <span class="string">"automobile"</span>, <span class="string">"bird"</span>, <span class="string">"cat"</span>, <span class="string">"deer"</span>, <span class="string">"dog"</span>, <span class="string">"frog"</span>, <span class="string">"horse"</span>, <span class="string">"ship"</span>, <span class="string">"truck"</span>)</span><br><span class="line">train_dataset = torchvision.datasets.CIFAR10(<span class="string">"./data/"</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">val_dataset = torchvision.datasets.CIFAR10(<span class="string">"./data/"</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">batch_size = <span class="number">128</span></span><br><span class="line">train_dl = DataLoader(train_dataset, batch_size=batch_size, num_workers=num_workers, shuffle=<span class="literal">True</span>)</span><br><span class="line">val_dl = DataLoader(val_dataset, batch_size=batch_size, num_workers=num_workers)</span><br><span class="line"></span><br><span class="line">logs_dir = <span class="string">"/root/tf-logs/"</span></span><br><span class="line">writer = SummaryWriter(logs_dir + <span class="string">"resnet"</span>)</span><br><span class="line">writer_dict = {}</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    writer_dict[<span class="string">f"writer_<span class="subst">{i}</span>"</span>] = SummaryWriter(logs_dir + classes[i])</span><br><span class="line"></span><br><span class="line">resnet_type = <span class="string">"resnet50"</span></span><br><span class="line">model = get_resnet(resnet_type=resnet_type, num_classes=<span class="number">10</span>, is_load_weight=<span class="literal">True</span>, model_path=<span class="string">"./resnet50-19c8e357.pth"</span>)</span><br><span class="line">num_epochs = <span class="number">50</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss().to(device)</span><br><span class="line">optimizer = optim.Adam(model.parameters(), lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 混合精度计算</span></span><br><span class="line">scaler = cuda.amp.GradScaler()</span><br><span class="line"></span><br><span class="line">torch.backends.cudnn.benchmark = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">best_model_acc = <span class="number">0</span></span><br><span class="line">model.to(device)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    train_loop = tqdm(train_dl, leave=<span class="literal">True</span>, desc=<span class="string">f"Train Epoch: <span class="subst">{epoch}</span>/<span class="subst">{num_epochs}</span>"</span>)</span><br><span class="line">    model.train()</span><br><span class="line">    epoch_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> step, (imgs, labels) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loop):</span><br><span class="line">        imgs = imgs.to(device)</span><br><span class="line">        labels = labels.to(device)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> cuda.amp.autocast():</span><br><span class="line">            preds = model(imgs)</span><br><span class="line">            loss = loss_fn(preds, labels)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        scaler.scale(loss).backward()</span><br><span class="line">        scaler.step(optimizer)</span><br><span class="line">        scaler.update()</span><br><span class="line"></span><br><span class="line">        epoch_loss += loss.item()</span><br><span class="line">        train_loop.set_postfix(loss=<span class="string">f"<span class="subst">{np.<span class="built_in">round</span>(loss.item(), <span class="number">3</span>)}</span>"</span>)</span><br><span class="line">    epoch_loss /= <span class="built_in">len</span>(train_loop)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模型的测试</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    acc_num = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 每个类别的分类正确的个数</span></span><br><span class="line">    class_correct = <span class="built_in">list</span>(<span class="number">0.</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">    <span class="comment"># 类别数</span></span><br><span class="line">    class_total = <span class="built_in">list</span>(<span class="number">0.</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        val_loop = tqdm(val_dl, leave=<span class="literal">True</span>, desc=<span class="string">f"Val: "</span>)</span><br><span class="line">        <span class="keyword">for</span> step, (imgs, labels) <span class="keyword">in</span> <span class="built_in">enumerate</span>(val_loop):</span><br><span class="line">            mini_batch_size = <span class="built_in">len</span>(imgs)</span><br><span class="line">            imgs = imgs.to(device)</span><br><span class="line">            labels = labels.to(device)</span><br><span class="line">            output = model(imgs)</span><br><span class="line"></span><br><span class="line">            _, preds = torch.<span class="built_in">max</span>(output, <span class="number">1</span>)</span><br><span class="line">            c = (preds == labels)</span><br><span class="line">            c = c.squeeze()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(mini_batch_size):</span><br><span class="line">                label = labels[i]</span><br><span class="line">                <span class="comment"># 如果预测正确，则相应类别预测正确的数目加1（true）</span></span><br><span class="line">                <span class="comment"># 如果预测错误，则相应类别预测正确的数目加0（false）</span></span><br><span class="line">                class_correct[label] += c[i]</span><br><span class="line">                class_total[label] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 总的分类准确率</span></span><br><span class="line">            acc = c.<span class="built_in">sum</span>().item()</span><br><span class="line">            acc_num += acc</span><br><span class="line"></span><br><span class="line">        accuracy = acc_num / <span class="built_in">len</span>(val_dataset)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">            <span class="comment"># tqdm.write(</span></span><br><span class="line">            <span class="comment">#     f"Accuracy of {classes[i]:&gt;10} : "</span></span><br><span class="line">            <span class="comment">#     f"{np.round(100 * class_correct[i].item() / class_total[i], 2)}%")</span></span><br><span class="line">            writer_dict[<span class="string">f"writer_<span class="subst">{i}</span>"</span>].add_scalar(<span class="string">f"classes acc"</span>, class_correct[i].item() / class_total[i], epoch)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存模型</span></span><br><span class="line">        <span class="keyword">if</span> accuracy &gt; best_model_acc:</span><br><span class="line">            torch.save(model.state_dict(), <span class="string">f"./<span class="subst">{resnet_type}</span>_<span class="subst">{np.<span class="built_in">round</span>(accuracy, <span class="number">3</span>)}</span>.pth"</span>)</span><br><span class="line">            best_model_acc = accuracy</span><br><span class="line">        tqdm.write(<span class="string">f"Val Accuracy: <span class="subst">{np.<span class="built_in">round</span>(accuracy * <span class="number">100</span>, <span class="number">2</span>)}</span>%"</span>)</span><br><span class="line"></span><br><span class="line">        writer.add_scalar(<span class="string">"classes acc"</span>, accuracy, epoch)</span><br><span class="line">        writer.add_scalar(<span class="string">"loss"</span>, epoch_loss, epoch)</span><br><span class="line">os.system(<span class="string">"shutdown"</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-训练结果"><a href="#3-3-训练结果" class="headerlink" title="3.3 训练结果"></a>3.3 训练结果</h4><p><img src="https://pic1.imgdb.cn/item/634a31cf16f2c2beb1cdb622.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=fAZHx&amp;originHeight=633&amp;originWidth=1063&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="><br><img src="https://pic1.imgdb.cn/item/634a31cf16f2c2beb1cdb61f.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=mZ7lP&amp;originHeight=716&amp;originWidth=1785&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;论文地址：&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1512.03385&quot;&gt;https://arxiv.org/abs/1512.03385&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-ResNet的</summary>
      
    
    
    
    <category term="ResNet" scheme="http://example.com/categories/ResNet/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="CNN" scheme="http://example.com/tags/CNN/"/>
    
    <category term="ResNet" scheme="http://example.com/tags/ResNet/"/>
    
  </entry>
  
  <entry>
    <title>CNN-VGG总结</title>
    <link href="http://example.com/2022/10/12/cnn/CNN-VGG%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/10/12/cnn/CNN-VGG%E6%80%BB%E7%BB%93/</id>
    <published>2022-10-12T11:22:41.000Z</published>
    <updated>2022-10-15T10:31:41.639Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>论文地址：<br><a href="https://arxiv.org/abs/1409.1556">https://arxiv.org/abs/1409.1556</a></p></blockquote><h3 id="1-VGG的主要贡献"><a href="#1-VGG的主要贡献" class="headerlink" title="1. VGG的主要贡献"></a>1. VGG的主要贡献</h3><ol><li>VGG使用 2个3X3的卷积核 来代替 5X5的卷积核，3个3X3的卷积核 代替7X7的卷积核，在保证相同感受野的情况下，多个小卷积层堆积可以提升网络深度，增加特征提取能力；</li><li>相比于AlexNet，搭建了更深层次的神经网络。</li></ol><h3 id="2-VGG的主要结构"><a href="#2-VGG的主要结构" class="headerlink" title="2. VGG的主要结构"></a>2. VGG的主要结构</h3><p><img src="https://pic1.imgdb.cn/item/634a106516f2c2beb19adaab.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=osLd5&amp;originHeight=688&amp;originWidth=673&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><p>以最常用的VGG16为例：<br><img src="https://pic1.imgdb.cn/item/634a106516f2c2beb19ada60.jpg#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=kCLjA&amp;originHeight=4361&amp;originWidth=1594&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><blockquote><p>自适应池化（AdaptiveAvgPool2d）:<br>对输入信号，提供2维的自适应平均池化操作 对于任何输入大小的输入，可以将输出尺寸指定为H*W，但是输入和输出特征的数目不会变化。<br><a href="https://blog.csdn.net/qq_41997920/article/details/98963215">https://blog.csdn.net/qq_41997920/article/details/98963215</a></p></blockquote><h3 id="3-模型代码及训练过程"><a href="#3-模型代码及训练过程" class="headerlink" title="3. 模型代码及训练过程"></a>3. 模型代码及训练过程</h3><blockquote><p>模型文件下载地址：<br>链接：<a href="https://pan.baidu.com/s/1h8r3_2HVqUKA_nIlXgOY5g">https://pan.baidu.com/s/1h8r3_2HVqUKA_nIlXgOY5g</a><br>提取码：kov6 </p></blockquote><h4 id="3-1-模型代码及加载权重"><a href="#3-1-模型代码及加载权重" class="headerlink" title="3.1 模型代码及加载权重"></a>3.1 模型代码及加载权重</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">当设置nn.Dropout(p=0.5, inplace=True)时,会出现后面的报错</span></span><br><span class="line"><span class="string">RuntimeError: one of the variables needed for gradient computation has been modified by an inplace operation:</span></span><br><span class="line"><span class="string">[torch.cuda.HalfTensor [16, 4096]], which is output 0 of ReluBackward1, is at version 2; expected version 1 instead.</span></span><br><span class="line"><span class="string">Hint: enable anomaly detection to find the operation that failed to compute its gradient,</span></span><br><span class="line"><span class="string">with torch.autograd.set_detect_anomaly(True).</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.models</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line">vgg_types = {</span><br><span class="line">    <span class="string">'VGG11'</span>: [<span class="number">64</span>, <span class="string">'M'</span>, <span class="number">128</span>, <span class="string">'M'</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>],</span><br><span class="line">    <span class="string">'VGG13'</span>: [<span class="number">64</span>, <span class="number">64</span>, <span class="string">'M'</span>, <span class="number">128</span>, <span class="number">128</span>, <span class="string">'M'</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>],</span><br><span class="line">    <span class="string">'VGG16'</span>: [<span class="number">64</span>, <span class="number">64</span>, <span class="string">'M'</span>, <span class="number">128</span>, <span class="number">128</span>, <span class="string">'M'</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>],</span><br><span class="line">    <span class="string">'VGG19'</span>: [<span class="number">64</span>, <span class="number">64</span>, <span class="string">'M'</span>, <span class="number">128</span>, <span class="number">128</span>, <span class="string">'M'</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="number">256</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">'M'</span>],</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VGG</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channels=<span class="number">3</span>, num_classes=<span class="number">1000</span>, vgg_type=<span class="string">"VGG16"</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(VGG, self).__init__()</span><br><span class="line">        self.in_channels = in_channels</span><br><span class="line">        self.features = self.create_conv_layers(vgg_types[vgg_type])</span><br><span class="line">        self.avgpool = nn.AdaptiveAvgPool2d(output_size=(<span class="number">7</span>, <span class="number">7</span>))</span><br><span class="line">        self.classifier = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">512</span> * <span class="number">7</span> * <span class="number">7</span>, <span class="number">4096</span>, bias=<span class="literal">True</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>, bias=<span class="literal">True</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, num_classes, bias=<span class="literal">True</span>)</span><br><span class="line">        )</span><br><span class="line">        self.initialize_weights()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.features(x)</span><br><span class="line">        x = self.avgpool(x)</span><br><span class="line">        x = x.view(x.shape[<span class="number">0</span>], -<span class="number">1</span>)</span><br><span class="line">        x = self.classifier(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_conv_layers</span>(<span class="params">self, architecture</span>):</span><br><span class="line">        layers = []</span><br><span class="line">        in_channels = self.in_channels</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> architecture:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(x) == <span class="built_in">int</span>:</span><br><span class="line">                out_channels = x</span><br><span class="line"></span><br><span class="line">                layers += [</span><br><span class="line">                    nn.Conv2d(in_channels=in_channels, out_channels=out_channels,</span><br><span class="line">                              kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>)),</span><br><span class="line">                    <span class="comment"># 如果要使用官网的预训练权重，需要注释掉下面这句</span></span><br><span class="line">                    nn.BatchNorm2d(x),</span><br><span class="line">                    nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">                ]</span><br><span class="line">                in_channels = x</span><br><span class="line">            <span class="keyword">elif</span> x == <span class="string">'M'</span>:</span><br><span class="line">                layers += [nn.MaxPool2d(kernel_size=(<span class="number">2</span>, <span class="number">2</span>), stride=(<span class="number">2</span>, <span class="number">2</span>))]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nn.Sequential(*layers)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 参数初始化</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">initialize_weights</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(m, nn.Conv2d):</span><br><span class="line">                nn.init.kaiming_uniform_(m.weight)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> m.bias <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.BatchNorm2d):</span><br><span class="line">                nn.init.constant_(m.weight, <span class="number">1</span>)</span><br><span class="line">                nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.Linear):</span><br><span class="line">                nn.init.kaiming_uniform_(m.weight)</span><br><span class="line">                nn.init.constant_(m.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_vgg_model</span>(<span class="params">in_channels=<span class="number">3</span>, num_classes=<span class="number">1000</span>, vgg_type=<span class="string">"VGG16"</span>, is_load_weights=<span class="literal">False</span>, model_path=<span class="literal">None</span></span>):</span><br><span class="line">    vgg_type = vgg_type.upper()</span><br><span class="line">    <span class="keyword">if</span> is_load_weights:</span><br><span class="line">        <span class="keyword">assert</span> model_path <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>, <span class="string">"model path cannot be none"</span></span><br><span class="line">        device = <span class="string">"cuda"</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">"cpu"</span></span><br><span class="line">        model = VGG(in_channels=in_channels, num_classes=<span class="number">10</span>, vgg_type=vgg_type)</span><br><span class="line">        missing_keys, unexpected_keys = model.load_state_dict(torch.load(model_path, map_location=device), strict=<span class="literal">False</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"missing keys: <span class="subst">{missing_keys}</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"unexpected key: <span class="subst">{unexpected_keys}</span>"</span>)</span><br><span class="line">        model.classifier[<span class="number">6</span>] = nn.Linear(model.classifier[<span class="number">6</span>].in_features, num_classes)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        model = VGG(in_channels=in_channels, num_classes=num_classes, vgg_type=vgg_type)</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    model_path = <span class="string">"./VGG16_0.898.pth"</span></span><br><span class="line">    model = get_vgg_model(num_classes=<span class="number">10</span>, is_load_weights=<span class="literal">True</span>, model_path=model_path)</span><br><span class="line">    input_x = torch.randn((<span class="number">3</span>, <span class="number">3</span>, <span class="number">224</span>, <span class="number">224</span>))</span><br><span class="line">    preds = model(input_x)</span><br><span class="line">    <span class="built_in">print</span>(preds.shape)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>由于原始的VGG模型中没有BN层，所以使用上述代码加载Pytorch官方的预训练权重会出错；<br>如果要使用官方的预训练模型，需要注释掉BN层，并将第89行的num_classes=10修改为num_classes=1000；<br>VGG16_0.898.pth模型文件是我用上述网络结构在CIFAR10数据集训练的权重，可以作为练习使用。</p></blockquote><h4 id="3-2-使用CIFAR10数据集训练模型"><a href="#3-2-使用CIFAR10数据集训练模型" class="headerlink" title="3.2 使用CIFAR10数据集训练模型"></a>3.2 使用CIFAR10数据集训练模型</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset, DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> optim, nn, cuda</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> get_vgg_model</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">sysstr = platform.system()</span><br><span class="line"></span><br><span class="line">device = <span class="string">"cuda"</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">"cpu"</span></span><br><span class="line">num_workers = <span class="number">0</span> <span class="keyword">if</span> sysstr == <span class="string">"Windows"</span> <span class="keyword">else</span> <span class="number">8</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.Resize((<span class="number">224</span>, <span class="number">224</span>)),</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize(mean=[<span class="number">0.491</span>, <span class="number">0.482</span>, <span class="number">0.447</span>], std=[<span class="number">0.247</span>, <span class="number">0.243</span>, <span class="number">0.262</span>])</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">classes = (<span class="string">"airplane"</span>, <span class="string">"automobile"</span>, <span class="string">"bird"</span>, <span class="string">"cat"</span>, <span class="string">"deer"</span>, <span class="string">"dog"</span>, <span class="string">"frog"</span>, <span class="string">"horse"</span>, <span class="string">"ship"</span>, <span class="string">"truck"</span>)</span><br><span class="line">train_dataset = torchvision.datasets.CIFAR10(<span class="string">"./data/"</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">val_dataset = torchvision.datasets.CIFAR10(<span class="string">"./data/"</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">batch_size = <span class="number">64</span></span><br><span class="line">train_dl = DataLoader(train_dataset, batch_size=batch_size, num_workers=num_workers, shuffle=<span class="literal">True</span>)</span><br><span class="line">val_dl = DataLoader(val_dataset, batch_size=batch_size, num_workers=num_workers)</span><br><span class="line"></span><br><span class="line">logs_dir = <span class="string">"/root/tf-logs/"</span></span><br><span class="line">writer = SummaryWriter(logs_dir + <span class="string">"vgg"</span>)</span><br><span class="line">writer_dict = {}</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    writer_dict[<span class="string">f"writer_<span class="subst">{i}</span>"</span>] = SummaryWriter(logs_dir + classes[i])</span><br><span class="line"></span><br><span class="line">vgg_type = <span class="string">"VGG16"</span></span><br><span class="line">model = get_vgg_model(vgg_type=vgg_type, num_classes=<span class="number">10</span>)</span><br><span class="line">num_epochs = <span class="number">100</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss().to(device)</span><br><span class="line">optimizer = optim.Adam(model.parameters(), lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 混合精度计算</span></span><br><span class="line">scaler = cuda.amp.GradScaler()</span><br><span class="line"></span><br><span class="line">torch.backends.cudnn.benchmark = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">best_model_acc = <span class="number">0</span></span><br><span class="line">model.to(device)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    train_loop = tqdm(train_dl, leave=<span class="literal">True</span>, desc=<span class="string">f"Train Epoch: <span class="subst">{epoch}</span>/<span class="subst">{num_epochs}</span>"</span>)</span><br><span class="line">    model.train()</span><br><span class="line">    epoch_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> step, (imgs, labels) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loop):</span><br><span class="line">        imgs = imgs.to(device)</span><br><span class="line">        labels = labels.to(device)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> cuda.amp.autocast():</span><br><span class="line">            preds = model(imgs)</span><br><span class="line">            loss = loss_fn(preds, labels)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        scaler.scale(loss).backward()</span><br><span class="line">        scaler.step(optimizer)</span><br><span class="line">        scaler.update()</span><br><span class="line"></span><br><span class="line">        epoch_loss += loss.item()</span><br><span class="line">        train_loop.set_postfix(loss=<span class="string">f"<span class="subst">{np.<span class="built_in">round</span>(loss.item(), <span class="number">3</span>)}</span>"</span>)</span><br><span class="line">    epoch_loss /= <span class="built_in">len</span>(train_loop)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模型的测试</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    acc_num = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 每个类别的分类正确的个数</span></span><br><span class="line">    class_correct = <span class="built_in">list</span>(<span class="number">0.</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">    <span class="comment"># 类别数</span></span><br><span class="line">    class_total = <span class="built_in">list</span>(<span class="number">0.</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        val_loop = tqdm(val_dl, leave=<span class="literal">True</span>, desc=<span class="string">f"Val: "</span>)</span><br><span class="line">        <span class="keyword">for</span> step, (imgs, labels) <span class="keyword">in</span> <span class="built_in">enumerate</span>(val_loop):</span><br><span class="line">            mini_batch_size = <span class="built_in">len</span>(imgs)</span><br><span class="line">            imgs = imgs.to(device)</span><br><span class="line">            labels = labels.to(device)</span><br><span class="line">            output = model(imgs)</span><br><span class="line"></span><br><span class="line">            _, preds = torch.<span class="built_in">max</span>(output, <span class="number">1</span>)</span><br><span class="line">            c = (preds == labels)</span><br><span class="line">            c = c.squeeze()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(mini_batch_size):</span><br><span class="line">                label = labels[i]</span><br><span class="line">                <span class="comment"># 如果预测正确，则相应类别预测正确的数目加1（true）</span></span><br><span class="line">                <span class="comment"># 如果预测错误，则相应类别预测正确的数目加0（false）</span></span><br><span class="line">                class_correct[label] += c[i]</span><br><span class="line">                class_total[label] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 总的分类准确率</span></span><br><span class="line">            acc = c.<span class="built_in">sum</span>().item()</span><br><span class="line">            acc_num += acc</span><br><span class="line"></span><br><span class="line">        accuracy = acc_num / <span class="built_in">len</span>(val_dataset)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">            <span class="comment"># tqdm.write(</span></span><br><span class="line">            <span class="comment">#     f"Accuracy of {classes[i]:&gt;10} : "</span></span><br><span class="line">            <span class="comment">#     f"{np.round(100 * class_correct[i].item() / class_total[i], 2)}%")</span></span><br><span class="line">            writer_dict[<span class="string">f"writer_<span class="subst">{i}</span>"</span>].add_scalar(<span class="string">f"classes acc"</span>, class_correct[i].item() / class_total[i], epoch)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存模型</span></span><br><span class="line">        <span class="keyword">if</span> accuracy &gt; best_model_acc:</span><br><span class="line">            torch.save(model.state_dict(), <span class="string">f"./vgg_<span class="subst">{vgg_type}</span>_<span class="subst">{np.<span class="built_in">round</span>(accuracy, <span class="number">3</span>)}</span>.pth"</span>)</span><br><span class="line">            best_model_acc = accuracy</span><br><span class="line">        tqdm.write(<span class="string">f"Val Accuracy: <span class="subst">{np.<span class="built_in">round</span>(accuracy * <span class="number">100</span>, <span class="number">2</span>)}</span>%"</span>)</span><br><span class="line"></span><br><span class="line">        writer.add_scalar(<span class="string">"classes acc"</span>, accuracy, epoch)</span><br><span class="line">        writer.add_scalar(<span class="string">"loss"</span>, epoch_loss, epoch)</span><br><span class="line">os.system(<span class="string">"shutdown"</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-训练结果"><a href="#3-3-训练结果" class="headerlink" title="3.3 训练结果"></a>3.3 训练结果</h4><p><img src="https://pic1.imgdb.cn/item/63493c6016f2c2beb10131fd.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=iT6XJ&amp;originHeight=515&amp;originWidth=1347&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="><br><img src="https://pic1.imgdb.cn/item/63493c6016f2c2beb10131f0.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=w5jhK&amp;originHeight=682&amp;originWidth=1920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;论文地址：&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1409.1556&quot;&gt;https://arxiv.org/abs/1409.1556&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-VGG的主要贡献&quot;</summary>
      
    
    
    
    <category term="VGG" scheme="http://example.com/categories/VGG/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="CNN" scheme="http://example.com/tags/CNN/"/>
    
    <category term="VGG" scheme="http://example.com/tags/VGG/"/>
    
  </entry>
  
  <entry>
    <title>树莓派 PICO基础教程（基于MicroPython）</title>
    <link href="http://example.com/2022/10/12/raspberrypi/%E6%A0%91%E8%8E%93%E6%B4%BE-PICO%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%88%E5%9F%BA%E4%BA%8EMicroPython%EF%BC%89/"/>
    <id>http://example.com/2022/10/12/raspberrypi/%E6%A0%91%E8%8E%93%E6%B4%BE-PICO%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%88%E5%9F%BA%E4%BA%8EMicroPython%EF%BC%89/</id>
    <published>2022-10-12T06:06:45.000Z</published>
    <updated>2022-10-12T06:07:24.742Z</updated>
    
    <content type="html"><![CDATA[<h3 id="树莓派-PICO基础教程（基于MicroPython）"><a href="#树莓派-PICO基础教程（基于MicroPython）" class="headerlink" title="树莓派 PICO基础教程（基于MicroPython）"></a>树莓派 PICO基础教程（基于MicroPython）</h3><h4 id="1-树莓派-PICO-简介"><a href="#1-树莓派-PICO-简介" class="headerlink" title="1 树莓派 PICO 简介"></a>1 树莓派 PICO 简介</h4><h5 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h5><p>　　<code>Raspberry Pi Pico</code>是具有灵活数字接口的低成本，高性能微控制器板。它集成了<code>Raspberry Pi</code>自己的<code>RP2040</code>微控制器芯片，运行速度高达133 MHz的双核<code>Arm Cortex M0 +</code>处理器，嵌入式264KB SRAM和2MB板载闪存以及26个多功能GPIO引脚。对于软件开发，可以使用<code>Raspberry Pi</code>的C / C ++ SDK或MicroPython。<a href="https://www.waveshare.com/wiki/Raspberry_Pi_Pico">^1</a></p><span id="more"></span><h5 id="1-2-配置-2"><a href="#1-2-配置-2" class="headerlink" title="1.2 配置 ^2"></a>1.2 配置 <a href="https://pico.org.cn/">^2</a></h5><table><thead><tr><th align="center">树莓派 PICO配置</th></tr></thead><tbody><tr><td align="center">双核 Arm Cortex-M0 + @ 133MHz</td></tr><tr><td align="center">2 个 UART、2 个 SPI 控制器和 2 个 I2C 控制器</td></tr><tr><td align="center">芯片内置 264KB SRAM 和 2MB 的板载闪存</td></tr><tr><td align="center">16 个 PWM 通道</td></tr><tr><td align="center">通过专用 QSPI 总线支持最高 16MB 的片外闪存</td></tr><tr><td align="center">USB 1.1 主机和设备支持</td></tr><tr><td align="center">DMA 控制器</td></tr><tr><td align="center">8 个树莓派可编程 I/O（PIO）状态机，用于自定义外围设备支持</td></tr><tr><td align="center">30 个 GPIO 引脚，其中 4 个可用作模拟输入</td></tr><tr><td align="center">支持 UF2 的 USB 大容量存储启动模式，用于拖放式编程</td></tr></tbody></table><h5 id="1-3-引脚图"><a href="#1-3-引脚图" class="headerlink" title="1.3 引脚图"></a>1.3 引脚图</h5><p><img src="https://pic.imgdb.cn/item/60a8f5f26ae4f77d35bc0cd4.png" alt="树莓派 PICO 引脚图"></p><h5 id="1-4-尺寸"><a href="#1-4-尺寸" class="headerlink" title="1.4 尺寸"></a>1.4 尺寸</h5><p><img src="https://pic.imgdb.cn/item/60ab5d2dce272128a6ba5a8d.png"></p><p><img src="https://pic.imgdb.cn/item/60ab5d2dce272128a6ba5aad.jpg"></p><p><img src="https://pic.imgdb.cn/item/60ab5d2dce272128a6ba5ade.jpg"></p><h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h4><h5 id="2-1-烧录固件"><a href="#2-1-烧录固件" class="headerlink" title="2.1 烧录固件"></a>2.1 烧录固件</h5><ol><li>点击 <a href="https://micropython.org/download/rp2-pico/rp2-pico-latest.uf2">https://micropython.org/download/rp2-pico/rp2-pico-latest.uf2</a> 链接下载UF2文件；</li></ol><blockquote><p>如果连接失效，可以进入 <a href="https://www.raspberrypi.org/documentation/rp2040/getting-started/#getting-started-with-micropython">https://www.raspberrypi.org/documentation/rp2040/getting-started/#getting-started-with-micropython</a>官网下载</p></blockquote><ol start="2"><li>按住BOOTSEL键不放，将Pico插入电脑的USB串口，电脑上会弹出一个新的U盘文件夹，把刚刚下载的UF2文件拖拽到文件夹中，树莓派 PICO将会自动重启，此时，固件烧录完成。</li></ol><h5 id="2-2-安装IDE（Thonny-IDE）"><a href="#2-2-安装IDE（Thonny-IDE）" class="headerlink" title="2.2 安装IDE（Thonny IDE）"></a>2.2 安装IDE（Thonny IDE）</h5><ol><li>进入软件官网 <a href="https://thonny.org/">https://thonny.org/</a>下载软件，最好下载最新版的，否则可能不支持树莓派 PICO；</li><li>安装Thonny，安装完成后打开Thonny软件，打开工具-&gt;设置-&gt; 解释器，选择<code>MicroPython(Raspberry Pi Pico)</code>解释器，并在串口处选择树莓派PICO的串口号（如果板子已经连接在电脑上，软件一般会自动检测串口号）</li><li>重启软件，可以看到软件左下方显示了树莓派PICO中的文件；</li></ol><blockquote><p>如果没有显示左侧文件树的话可以勾选 视图-&gt;文件</p></blockquote><h5 id="2-3-离线运行程序"><a href="#2-3-离线运行程序" class="headerlink" title="2.3 离线运行程序"></a>2.3 离线运行程序</h5><p><img src="https://pic.imgdb.cn/item/60ab833cce272128a6cfe120.png" alt="新建文件"></p><p>　　新建文件，编写完代码后，按住<code>ctrl+s</code>将该文件保存在树莓派PICO上，并命名为<code>main.py</code>(一定要加后缀<code>.py</code>)，下次树莓派PICO通电时便会自动运行<code>main.py</code>中的程序。</p><h4 id="3-基础"><a href="#3-基础" class="headerlink" title="3 基础"></a>3 基础</h4><h5 id="3-01-点亮板载LED灯"><a href="#3-01-点亮板载LED灯" class="headerlink" title="3.01 点亮板载LED灯"></a>3.01 点亮板载LED灯</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 构建led对象</span></span><br><span class="line">    <span class="comment"># 板载LED灯连接与引脚25相连</span></span><br><span class="line">    <span class="comment"># LED = Pin(id, mode, pull)</span></span><br><span class="line">    <span class="comment"># id:PICO引脚编号</span></span><br><span class="line">    <span class="comment"># mode:输入输出方式，有Pin.IN(输入)和Pin.OUT(输出)两种</span></span><br><span class="line">    <span class="comment"># pull:上下拉电阻配置，有None(无上下拉电阻)、Pin.PULL_UP(上拉电阻)和Pin.PULL_DOWN(下拉电阻)三种</span></span><br><span class="line">    LED = Pin(<span class="number">25</span>, Pin.OUT)</span><br><span class="line">    <span class="comment"># 高电平点亮</span></span><br><span class="line">    LED.value(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><h5 id="3-02-板载LED闪烁"><a href="#3-02-板载LED闪烁" class="headerlink" title="3.02 板载LED闪烁"></a>3.02 板载LED闪烁</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> utime <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line">led = Pin(<span class="number">25</span>, Pin.OUT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># led点亮</span></span><br><span class="line">        led.value(<span class="number">1</span>)</span><br><span class="line">        utime.sleep_ms(<span class="number">1000</span>)</span><br><span class="line">        <span class="comment"># led熄灭</span></span><br><span class="line">        led.value(<span class="number">0</span>)</span><br><span class="line">        utime.sleep_ms(<span class="number">1000</span>)</span><br></pre></td></tr></tbody></table></figure><h5 id="3-03-LED流水灯"><a href="#3-03-LED流水灯" class="headerlink" title="3.03 LED流水灯"></a>3.03 LED流水灯</h5><ol><li>LED发光二极管图片</li></ol><p><img src="https://pic.imgdb.cn/item/60ab839fce272128a6d2231d.jpg"></p><ol start="2"><li>LED发光二极管正负极区分</li></ol><ul><li>一般引脚长的一端为正极，引脚短的为负极</li><li>看发光二极管内部，支架大的为负极，支架小的为负极</li></ul><ol start="3"><li>电路连线图</li></ol><p><img src="https://pic.imgdb.cn/item/60ab83b6ce272128a6d2ad56.png"></p><p><img src="https://pic.imgdb.cn/item/60ab83a0ce272128a6d226b2.jpg"></p><ol start="4"><li>代码</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义LED引脚数组</span></span><br><span class="line">leds = [Pin(i,Pin.OUT) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 依次点亮</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">            leds[n].value(<span class="number">1</span>)</span><br><span class="line">            utime.sleep_ms(<span class="number">200</span>)</span><br><span class="line">        <span class="comment"># 依次熄灭</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">            leds[n].value(<span class="number">0</span>)</span><br><span class="line">            utime.sleep_ms(<span class="number">100</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/60ab83a0ce272128a6d22746.gif"></p><h5 id="3-04-按键实验"><a href="#3-04-按键实验" class="headerlink" title="3.04 按键实验"></a>3.04 按键实验</h5><ol><li>四角按键图片</li></ol><p><img src="https://pic.imgdb.cn/item/60ab86bcce272128a6e71d47.jpg"></p><ol start="2"><li>四角按键怎么连接</li></ol><p><img src="https://pic.imgdb.cn/item/60ab86bcce272128a6e71d73.jpg"></p><p>默认按键未按下的情况下，12相连接，34相连接；当按下按键时，1234才相连接。</p><ol start="3"><li>电路接线图</li></ol><p><img src="https://pic.imgdb.cn/item/60ab89e3ce272128a6fc8124.png"></p><p><img src="https://pic.imgdb.cn/item/60ab89e3ce272128a6fc8143.jpg"></p><ol start="4"><li>代码</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置按键</span></span><br><span class="line"><span class="comment"># key = machine.Pin(id, mode, pull)</span></span><br><span class="line"><span class="comment"># id:树莓派Pico引脚编号</span></span><br><span class="line"><span class="comment"># mode:输入输出方式，有Pin.IN(输入)和Pin.OUT(输出)两种</span></span><br><span class="line"><span class="comment"># pull:上下拉电阻配置，有None(无上下拉电阻)、Pin.PULL_UP(上拉电阻)和Pin.PULL_DOWN(下拉电阻)三种</span></span><br><span class="line">key = Pin(<span class="number">0</span>, Pin.IN, Pin.PULL_UP)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># print(key.value())</span></span><br><span class="line">        <span class="keyword">if</span> key.value() == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 等待一段时间，防止抖动</span></span><br><span class="line">            utime.sleep_ms(<span class="number">100</span>)</span><br><span class="line">            <span class="keyword">if</span> key.value() == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">'The button is pressed'</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>按键消抖可以参考<a href="https://baike.baidu.com/item/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96">https://baike.baidu.com/item/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96</a></p></blockquote><h5 id="3-05-外部中断-改进3-04-按键实验"><a href="#3-05-外部中断-改进3-04-按键实验" class="headerlink" title="3.05 外部中断(改进3.04 按键实验)"></a>3.05 外部中断(改进3.04 按键实验)</h5><ol><li>什么是外部中断</li></ol><p>　　外部中断是单片机实时地处理外部事件的一种内部机制。当某种外部事件发生时，单片机的中断系统将迫使CPU暂停正在执行的程序，转而去进行中断事件的处理；中断处理完毕后．又返回被中断的程序处，继续执行下去。<a href="https://baike.baidu.com/item/%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD">^3</a></p><ol start="2"><li>外部中断的作用</li></ol><ul><li>节省CPU资源</li></ul><ol start="3"><li>代码实现</li></ol><p>　　在3.04 按键实验中，检测按键是否被按下采用的是在主程序中写死循环的办法，假如这个按键被按下的频率十分低（一天只有几次被按下），采用死循环的方法将会浪费大量的CPU资源，而采用外部中断的方式检测按键是否被按下将大大节省CPU资源。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置按键</span></span><br><span class="line">key = Pin(<span class="number">0</span>, Pin.IN, Pin.PULL_UP)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">external_interrupt</span>(<span class="params">key</span>):</span><br><span class="line">    <span class="comment"># 消除抖动</span></span><br><span class="line">    utime.sleep_ms(<span class="number">100</span>)</span><br><span class="line">    <span class="comment"># 再次判断按键是否被按下</span></span><br><span class="line">    <span class="keyword">if</span> key.value() == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'The button is pressed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># KEY.irq(handler,trigger)</span></span><br><span class="line">    <span class="comment"># handler:中断执行的回调函数</span></span><br><span class="line">    <span class="comment"># trigger:触发中断的方式，分别为Pin.IRQ_FALLING(下降沿触发)、</span></span><br><span class="line">    <span class="comment"># Pin.IRQ_RISING(上升沿触发)、Pin.IRQ_LOW_LEVEL(低电平触发)和</span></span><br><span class="line">    <span class="comment"># Pin.IRQ_HIGH_LEVEL(高电平触发)四种</span></span><br><span class="line">    <span class="comment"># 定义中断，下降沿触发</span></span><br><span class="line">    key.irq(external_interrupt, Pin.IRQ_FALLING)</span><br></pre></td></tr></tbody></table></figure><h5 id="3-06-定时器中断-改进3-02-板载LED闪烁"><a href="#3-06-定时器中断-改进3-02-板载LED闪烁" class="headerlink" title="3.06 定时器中断(改进3.02 板载LED闪烁)"></a>3.06 定时器中断(改进3.02 板载LED闪烁)</h5><ol><li>什么是定时器中断</li></ol><ul><li>定时器中断是由单片机中的定时器溢出而申请的中断，即设定一个时间，到达这个时间后就会产生中断</li></ul><ol start="2"><li>代码</li></ol><p>通过设置定时器中断使树莓派PICO板载LED每隔两秒闪烁一次</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin, Timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建LED对象</span></span><br><span class="line">led=Pin(<span class="number">25</span>, Pin.OUT)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 闪烁回调函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">twinkle</span>(<span class="params">tim</span>):</span><br><span class="line">    <span class="comment"># toggle方法:LED状态翻转</span></span><br><span class="line">    led.toggle()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 构建定时器</span></span><br><span class="line">    tim = Timer()</span><br><span class="line">    <span class="comment"># tim.init(period, mode, callback)</span></span><br><span class="line">    <span class="comment"># period:周期时间(单位为ms)</span></span><br><span class="line">    <span class="comment"># mode:工作模式，有Timer.ONE_SHOT(执行一次)和Timer.PERIODIC(周期性执行)两种</span></span><br><span class="line">    <span class="comment"># callback:定时器中断的回调函数</span></span><br><span class="line">    tim.init(period=<span class="number">2000</span>, mode=Timer.PERIODIC, callback=twinkle)</span><br></pre></td></tr></tbody></table></figure><h5 id="3-07-PWM-脉冲宽度调制-实现板载LED呼吸灯"><a href="#3-07-PWM-脉冲宽度调制-实现板载LED呼吸灯" class="headerlink" title="3.07 PWM 脉冲宽度调制(实现板载LED呼吸灯)"></a>3.07 PWM 脉冲宽度调制(实现板载LED呼吸灯)</h5><ol><li>什么是PWM</li></ol><p>　　脉冲宽度调制是一种模拟控制方式，根据相应载荷的变化来调制晶体管基极或MOS管栅极的偏置，来实现晶体管或MOS管导通时间的改变，从而实现开关稳压电源输出的改变。这种方式能使电源的输出电压在工作条件变化时保持恒定，是利用微处理器的数字信号对模拟电路进行控制的一种非常有效的技术。脉冲宽度调制是利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术，广泛应用在从测量、通信到功率控制与变换的许多领域中。<a href="https://baike.baidu.com/item/%E8%84%89%E5%86%B2%E5%AE%BD%E5%BA%A6%E8%B0%83%E5%88%B6/10813756?fromtitle=PWM&amp;fromid=3034961&amp;fr=aladdin">^4</a></p><ol start="2"><li>代码</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin, Timer, PWM</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line">led = PWM(Pin(<span class="number">25</span>))</span><br><span class="line"><span class="comment"># 设置频率值</span></span><br><span class="line">led.freq(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">led_value = <span class="number">0</span></span><br><span class="line"><span class="comment"># led以5%增长/减少的速度变化亮度</span></span><br><span class="line">led_space = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        led_value += led_space</span><br><span class="line">        <span class="keyword">if</span> led_value &gt;= <span class="number">100</span>:</span><br><span class="line">            led_value = <span class="number">100</span></span><br><span class="line">            led_space = -<span class="number">5</span></span><br><span class="line">        <span class="keyword">elif</span> led_value &lt;= <span class="number">0</span>:</span><br><span class="line">            led_value = <span class="number">0</span></span><br><span class="line">            led_space = <span class="number">5</span></span><br><span class="line">        <span class="comment"># 设置占空比，需在0-65535之间</span></span><br><span class="line">        led.duty_u16(<span class="built_in">int</span>(led_value * <span class="number">500</span>))</span><br><span class="line">        utime.sleep_ms(<span class="number">100</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/60aba708ce272128a6dc80f6.gif"></p><h5 id="3-08-I2C总线-使用SSD1306-OLED屏幕"><a href="#3-08-I2C总线-使用SSD1306-OLED屏幕" class="headerlink" title="3.08 I2C总线(使用SSD1306 OLED屏幕)"></a>3.08 I2C总线(使用SSD1306 OLED屏幕)</h5><ol><li>I2C总线简介</li></ol><p>　　I2C总线是由Philips公司开发的一种简单、双向二线制同步串行总线。它只需要两根线即可在连接于总线上的器件之间传送信息。I2C由 2 条线组成：SDA（串行数据线）和SCL（串行时钟线），都是双向I/O线。<a href="https://baike.baidu.com/item/I2C%E6%80%BB%E7%BA%BF/918424?fromtitle=I2C&amp;fromid=1727975&amp;fr=aladdin">^5</a></p><ol start="2"><li>SSD1306 OLED简介</li></ol><p>　　SSD1306是一款带控制器的用于OLED点阵图形显示系统的单片CMOS OLED/PLED驱动器。它由128个SEG（列输出）和64个COM（行输出）组成。该芯片专为共阴极OLED面板设计。<br>  SSD1306内置对比度控制器、显示RAM（GDDRAM）和振荡器，以此减少了外部元件的数量和功耗。该芯片有256级亮度控制。数据或命令由通用微控制器通过硬件选择的6800/8000系通用并行接口、I2C接口或串行外围接口发送。该芯片适用于许多小型便携式应用，如手机副显示屏、MP3播放器和计算器等。<a href="https://wenku.baidu.com/view/10b60c264a73f242336c1eb91a37f111f1850d88.html">^6</a></p><ol start="3"><li>电路连线图</li></ol><p><img src="https://pic.imgdb.cn/item/60aba900ce272128a6edcaa5.png"></p><ol start="4"><li>代码</li></ol><blockquote><p>ssd1306.py下载地址： <a href="https://elijah.lanzoui.com/iJ13fpnq6je">https://elijah.lanzoui.com/iJ13fpnq6je</a></p><p>下载完成后，在Thonny软件左侧的文件窗口内找到这个文件，右键点击文件，选择上载到选项，文件即可传输到树莓派PICO上</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> SoftI2C, Pin</span><br><span class="line"><span class="comment"># 导入SSD1306驱动模块</span></span><br><span class="line"><span class="keyword">from</span> ssd1306 <span class="keyword">import</span> SSD1306_I2C</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 初始化SoftI2C</span></span><br><span class="line">    <span class="comment"># OLED屏幕的scl连接到树莓派PICO的GPIO0, sda连接到GPIO1</span></span><br><span class="line">    i2c = SoftI2C(scl=Pin(<span class="number">0</span>), sda=Pin(<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># oled = SSD1306_I2C(width, height, i2c, addr)</span></span><br><span class="line">    <span class="comment"># width:屏幕宽</span></span><br><span class="line">    <span class="comment"># height: 屏幕高</span></span><br><span class="line">    <span class="comment"># i2c:已定义的I2C对象</span></span><br><span class="line">    oled = SSD1306_I2C(<span class="number">128</span>, <span class="number">64</span>, i2c) <span class="comment">#OLED显示屏初始化：128*64分辨率,OLED的I2C地址是0x3c</span></span><br><span class="line">    <span class="comment"># OLED显示的字符串，横坐标和纵坐标</span></span><br><span class="line">    oled.text(<span class="string">"Hello World!"</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="comment"># OLED显示</span></span><br><span class="line">    oled.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/60abaa43ce272128a6fa7be5.jpg"></p><h4 id="4-传感器程序"><a href="#4-传感器程序" class="headerlink" title="4 传感器程序"></a>4 传感器程序</h4><h5 id="4-1-温度传感器-DS18B20"><a href="#4-1-温度传感器-DS18B20" class="headerlink" title="4.1 温度传感器(DS18B20)"></a>4.1 温度传感器(DS18B20)</h5><p>DS18B20是常用的数字温度传感器，其输出的是数字信号，具有体积小，硬件开销低，抗干扰能力强，精度高的特点。</p><ul><li><p>测温范围: -55℃～+125℃，固有测温误差1℃</p></li><li><p>工作电源: 3.0~5.5V/DC</p></li><li><p>单总线驱动，只占用一个IO口</p></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> machine, onewire, ds18x20, time, utime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用GPIO0口传输数据</span></span><br><span class="line"><span class="comment"># 将DS18B20的VCC端连接到树莓派PICO的3V3(OUT)端</span></span><br><span class="line"><span class="comment"># 将DS18B20的数据端连接到树莓派PICO的GPIO0口</span></span><br><span class="line"><span class="comment"># 将DS18B20的GND端连接到树莓派PICO的GND端</span></span><br><span class="line">pin = machine.Pin(<span class="number">0</span>)</span><br><span class="line">sensor = ds18x20.DS18X20(onewire.OneWire(pin))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描是否存在DS18B20设备</span></span><br><span class="line">roms = sensor.scan()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Found a ds18x20 device'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取温度数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detect_tem</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">      sensor.convert_temp()</span><br><span class="line">      <span class="keyword">for</span> rom <span class="keyword">in</span> roms:</span><br><span class="line">        <span class="comment"># 打印出温度值</span></span><br><span class="line">        <span class="comment"># 第一个打印出来的数值可能不太准确，从第二条数据开始才会显示出正常数据</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"{:.3f}"</span>.<span class="built_in">format</span>(sensor.read_temp(rom)))  </span><br><span class="line">      utime.sleep_ms(<span class="number">2000</span>)</span><br><span class="line">      </span><br><span class="line"><span class="comment"># 程序入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    detect_tem()</span><br></pre></td></tr></tbody></table></figure><h5 id="4-2-温湿度传感器"><a href="#4-2-温湿度传感器" class="headerlink" title="4.2 温湿度传感器"></a>4.2 温湿度传感器</h5><blockquote><p>DHT22.py文件下载地址： <a href="https://elijah.lanzoui.com/iFueapnq6id">https://elijah.lanzoui.com/iFueapnq6id</a></p><p>文件上传方法参考3.08 I2C总线</p></blockquote><h6 id="4-2-1-DHT11"><a href="#4-2-1-DHT11" class="headerlink" title="4.2.1 DHT11"></a>4.2.1 DHT11</h6><p>DHT11是一款有已校准数字信号输出的温湿度传感器。 其精度湿度±5%RH， 温度±2℃，量程湿度5-95%RH， 温度0-+50℃。<a href="https://baike.baidu.com/item/DHT11/1206271?fr=aladdin">^9</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> DHT22 <span class="keyword">import</span> DHT22</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line">pin = Pin(<span class="number">0</span>,Pin.IN,Pin.PULL_UP)</span><br><span class="line"><span class="comment"># 创建dht11对象</span></span><br><span class="line"><span class="comment"># 将DHT11的VCC端连接到树莓派PICO的3V3(OUT)端</span></span><br><span class="line"><span class="comment"># 将DHT11的数据端连接到树莓派PICO的GPIO0口</span></span><br><span class="line"><span class="comment"># 将DHT11的GND端连接到树莓派PICO的GND端</span></span><br><span class="line">dht_sensor=DHT22(pin, dht11=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detection</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        T, H = dht_sensor.read()</span><br><span class="line">        <span class="keyword">if</span> T <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"sensor error"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"{}'C  {}%"</span>.<span class="built_in">format</span>(T, H))</span><br><span class="line">        utime.sleep_ms(<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:    </span><br><span class="line">    detection()</span><br></pre></td></tr></tbody></table></figure><h6 id="4-2-1-DHT22"><a href="#4-2-1-DHT22" class="headerlink" title="4.2.1 DHT22"></a>4.2.1 DHT22</h6><p>　　DHT22也称AM2302，是一款含有已校准数字信号输出的温湿度复合传感器，湿度量程范围0-99.9%RH，精度±2%RH，而温度量程范围是-40℃-80℃，精度±0.5℃。<a href="https://blog.csdn.net/k1ang/article/details/98789397">^10</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> DHT22 <span class="keyword">import</span> DHT22</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"></span><br><span class="line">pin = Pin(<span class="number">0</span>,Pin.IN,Pin.PULL_UP)</span><br><span class="line"><span class="comment"># 创建dht11对象</span></span><br><span class="line"><span class="comment"># 将DHT11的VCC端连接到树莓派PICO的3V3(OUT)端</span></span><br><span class="line"><span class="comment"># 将DHT11的数据端连接到树莓派PICO的GPIO0口</span></span><br><span class="line"><span class="comment"># 将DHT11的GND端连接到树莓派PICO的GND端</span></span><br><span class="line">dht_sensor=DHT22(pin, dht11=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detection</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        T, H = dht_sensor.read()</span><br><span class="line">        <span class="keyword">if</span> T <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"sensor error"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"{:.2f}'C  {:.2f}%"</span>.<span class="built_in">format</span>(T, H))</span><br><span class="line">        utime.sleep_ms(<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:    </span><br><span class="line">    detection()</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;树莓派-PICO基础教程（基于MicroPython）&quot;&gt;&lt;a href=&quot;#树莓派-PICO基础教程（基于MicroPython）&quot; class=&quot;headerlink&quot; title=&quot;树莓派 PICO基础教程（基于MicroPython）&quot;&gt;&lt;/a&gt;树莓派 PICO基础教程（基于MicroPython）&lt;/h3&gt;&lt;h4 id=&quot;1-树莓派-PICO-简介&quot;&gt;&lt;a href=&quot;#1-树莓派-PICO-简介&quot; class=&quot;headerlink&quot; title=&quot;1 树莓派 PICO 简介&quot;&gt;&lt;/a&gt;1 树莓派 PICO 简介&lt;/h4&gt;&lt;h5 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.1 简介&quot;&gt;&lt;/a&gt;1.1 简介&lt;/h5&gt;&lt;p&gt;　　&lt;code&gt;Raspberry Pi Pico&lt;/code&gt;是具有灵活数字接口的低成本，高性能微控制器板。它集成了&lt;code&gt;Raspberry Pi&lt;/code&gt;自己的&lt;code&gt;RP2040&lt;/code&gt;微控制器芯片，运行速度高达133 MHz的双核&lt;code&gt;Arm Cortex M0 +&lt;/code&gt;处理器，嵌入式264KB SRAM和2MB板载闪存以及26个多功能GPIO引脚。对于软件开发，可以使用&lt;code&gt;Raspberry Pi&lt;/code&gt;的C / C ++ SDK或MicroPython。&lt;a href=&quot;https://www.waveshare.com/wiki/Raspberry_Pi_Pico&quot;&gt;^1&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="MCU" scheme="http://example.com/categories/MCU/"/>
    
    
    <category term="MCU" scheme="http://example.com/tags/MCU/"/>
    
    <category term="树莓派pico" scheme="http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BEpico/"/>
    
    <category term="MicroPython" scheme="http://example.com/tags/MicroPython/"/>
    
  </entry>
  
  <entry>
    <title>YOLOV5-Pytorch(YOLO数据集格式)</title>
    <link href="http://example.com/2022/10/12/object_detection/YOLOV5-Pytorch-YOLO%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%BC%E5%BC%8F/"/>
    <id>http://example.com/2022/10/12/object_detection/YOLOV5-Pytorch-YOLO%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%BC%E5%BC%8F/</id>
    <published>2022-10-12T06:04:37.000Z</published>
    <updated>2022-10-12T06:10:00.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="YOLOV5-Pytorch-YOLO数据集格式"><a href="#YOLOV5-Pytorch-YOLO数据集格式" class="headerlink" title="YOLOV5-Pytorch(YOLO数据集格式)"></a>YOLOV5-Pytorch(YOLO数据集格式)</h2><h3 id="1-下载官方代码并进行测试"><a href="#1-下载官方代码并进行测试" class="headerlink" title="1. 下载官方代码并进行测试"></a>1. 下载官方代码并进行测试</h3><h4 id="1-1-克隆github项目到本地"><a href="#1-1-克隆github项目到本地" class="headerlink" title="1.1 克隆github项目到本地"></a>1.1 克隆github项目到本地</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 已更新到v6.<span class="number">1</span>版本</span><br><span class="line">git clone https://github.com/ultralytics/yolov5.git</span><br></pre></td></tr></tbody></table></figure><h4 id="1-2-安装所需库"><a href="#1-2-安装所需库" class="headerlink" title="1.2 安装所需库"></a>1.2 安装所需库</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测试环境: </p><p>python: 3.7.2</p><p>torch: 1.8.1+cu101</p><p>torchvision: 0.9.1+cu101</p><p>tensorboard: 2.9.1</p></blockquote><h4 id="1-3-下载预训练权重文件"><a href="#1-3-下载预训练权重文件" class="headerlink" title="1.3 下载预训练权重文件"></a>1.3 下载预训练权重文件</h4><blockquote><p>创建一个文件夹weights，用于保存下载的权重文件：</p></blockquote><blockquote><p>官网下载地址：</p><p><a href="https://github.com/ultralytics/yolov5/releases">https://github.com/ultralytics/yolov5/releases</a></p><p>本地如果没有下载权重文件，在运行<code>detect.py</code>时程序也会自动下载权重文件。</p></blockquote><p><img src="https://pic.imgdb.cn/item/62c3dd5a5be16ec74a754b02.png"></p><h4 id="1-4-测试检测图片"><a href="#1-4-测试检测图片" class="headerlink" title="1.4 测试检测图片"></a>1.4 测试检测图片</h4><p>进入yolov5文件夹下，在cmd下运行命令：</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 以yolov5s.pt为例</span><br><span class="line">python detect.py --weights weights/yolov5s.pt --img <span class="number">640</span> --conf <span class="number">0</span>.<span class="number">25</span> --source bus.jpg --data data/coco.yaml</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5a5be16ec74a754ba3.jpg"></p><h4 id="1-5-测试检测视频"><a href="#1-5-测试检测视频" class="headerlink" title="1.5 测试检测视频"></a>1.5 测试检测视频</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --source data/test_video.mp4 --weights weights/yolov5n.pt  --data data/coco.yaml</span><br></pre></td></tr></tbody></table></figure><h3 id="2-制作自己的数据集"><a href="#2-制作自己的数据集" class="headerlink" title="2. 制作自己的数据集"></a>2. 制作自己的数据集</h3><h4 id="2-1-重命名图片"><a href="#2-1-重命名图片" class="headerlink" title="2.1 重命名图片"></a>2.1 重命名图片</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> new</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename_files</span>(<span class="params">path</span>):</span><br><span class="line">    filelist = os.listdir(path)</span><br><span class="line">    filelist.sort()</span><br><span class="line">    total_num = <span class="built_in">len</span>(filelist)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"total number: {}"</span>.<span class="built_in">format</span>(total_num))</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> filelist:</span><br><span class="line">        <span class="keyword">if</span> item.endswith(<span class="string">'.jpg'</span>):</span><br><span class="line">            original_name = os.path.join(path, item)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_name = os.path.join(path, <span class="built_in">str</span>(i).zfill(<span class="number">4</span>) + <span class="string">".jpg"</span>)</span><br><span class="line">                i = i + <span class="number">1</span></span><br><span class="line">                os.rename(original_name, new_name)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"{} rename ----&gt; {}"</span>.<span class="built_in">format</span>(original_name, new_name))</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"rename dir fail"</span>)</span><br><span class="line"></span><br><span class="line">path = <span class="string">"./data"</span></span><br><span class="line"></span><br><span class="line">rename_files(path)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5b5be16ec74a754c00.png"></p><h4 id="2-2-缩小图片数据"><a href="#2-2-缩小图片数据" class="headerlink" title="2.2 缩小图片数据"></a>2.2 缩小图片数据</h4><blockquote><p>防止出现图片数据过大，显存溢出的现象。</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resize_images</span>(<span class="params">dirPath, new_dirPath</span>):</span><br><span class="line">    fileName_list = os.listdir(dirPath)</span><br><span class="line">    filePath_list = [os.path.join(dirPath, fileName) <span class="keyword">for</span> fileName <span class="keyword">in</span> fileName_list]</span><br><span class="line">    imagePath_list = [filePath <span class="keyword">for</span> filePath <span class="keyword">in</span> filePath_list <span class="keyword">if</span> <span class="string">'.jpg'</span> <span class="keyword">in</span> filePath]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(new_dirPath):</span><br><span class="line">        os.mkdir(new_dirPath)</span><br><span class="line">    <span class="keyword">for</span> imagePath <span class="keyword">in</span> imagePath_list:</span><br><span class="line">        image = Image.<span class="built_in">open</span>(imagePath)</span><br><span class="line">        width, height = image.size</span><br><span class="line">        imageName = imagePath.split(<span class="string">'\\'</span>)[-<span class="number">1</span>]</span><br><span class="line">        save_path = os.path.join(new_dirPath, imageName)</span><br><span class="line">        <span class="keyword">if</span> width &gt;= <span class="number">600</span> <span class="keyword">and</span> height &gt;= <span class="number">600</span>:</span><br><span class="line">            minification = <span class="built_in">min</span>(width, height) // <span class="number">300</span> <span class="comment">#此变量表示缩小倍数</span></span><br><span class="line">            new_width = width // minification</span><br><span class="line">            new_height = height // minification</span><br><span class="line">            resized_image = image.resize((new_width, new_height), Image.ANTIALIAS)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'图片{}原来的宽{}, 高{}, --------&gt;  图片缩小后宽{}, 高{}'</span> .<span class="built_in">format</span>(imageName, width, height, new_width, new_height))</span><br><span class="line">            resized_image.save(save_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            image.save(save_path)</span><br><span class="line"></span><br><span class="line">resize_images(<span class="string">'data'</span>, <span class="string">'processed_data'</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-安装labelImg"><a href="#2-3-安装labelImg" class="headerlink" title="2.3 安装labelImg"></a>2.3 安装labelImg</h4><figure class="highlight pf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装labelImg</span></span><br><span class="line">pip install <span class="keyword">label</span>Img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动labelImg</span></span><br><span class="line"><span class="keyword">label</span>Img</span><br></pre></td></tr></tbody></table></figure><h4 id="2-4-标记数据"><a href="#2-4-标记数据" class="headerlink" title="2.4 标记数据"></a>2.4 标记数据</h4><ol><li><p>点击<code>Open Dir</code>选择图片数据所在的文件夹，标记格式选择YOLO格式；</p><p><img src="https://pic.imgdb.cn/item/62d421b7f54cd3f937e8cb8b.png"></p></li><li><p>按一下<code>w</code>键，即可标记目标数据，选定区域后输入所属的标签；</p><p><img src="https://pic.imgdb.cn/item/62d421b8f54cd3f937e8cc67.png"></p><p><img src="https://pic.imgdb.cn/item/62d421b8f54cd3f937e8cda6.png"></p></li><li><p>按住<code>ctrl+s</code>保存标记的信息；</p><p><img src="https://pic.imgdb.cn/item/62d421b9f54cd3f937e8cea9.png"></p></li><li><p>切换图片，标记下一张。</p><p><img src="https://pic.imgdb.cn/item/62d421b9f54cd3f937e8cf85.png"></p></li></ol><h3 id="3-训练数据"><a href="#3-训练数据" class="headerlink" title="3. 训练数据"></a>3. 训练数据</h3><h4 id="3-1-修改文件夹结构"><a href="#3-1-修改文件夹结构" class="headerlink" title="3.1 修改文件夹结构"></a>3.1 修改文件夹结构</h4><p>图片数据文件夹的格式目录</p><p>YOLO_data</p><p>|–pre_data 保存未划分的数据集</p><p>|—-processed_data 保存未划分数据集的图片</p><p>|—-processed_data_label 保存未划分数据集的标签</p><p>|–train 保存训练集的图片和标签信息</p><p>|–val 保存验证集的图片和标签信息</p><p>|–treain.txt 保存训练集数据的存储路径</p><p>|–val.txt 保存验证集数据的存储路径</p><h4 id="3-2-划分数据集"><a href="#3-2-划分数据集" class="headerlink" title="3.2 划分数据集"></a>3.2 划分数据集</h4><p>在yolov5文件夹里运行代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _*_ coding: utf-8 _*_</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_filelist</span>(<span class="params">path</span>):</span><br><span class="line">    Filelist = []</span><br><span class="line">    <span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(path):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            Filelist.append(os.path.join(home, filename))</span><br><span class="line">    <span class="keyword">return</span> Filelist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">spilt_dataset</span>(<span class="params">img_path, ann_path, img_train_save_path, ann_train_save_path, img_val_save_path, ann_val_save_path,label_suffix</span>):</span><br><span class="line">    <span class="comment"># 标签格式固定，可根据图片确定对应标签名</span></span><br><span class="line">    imgs = os.listdir(img_path)</span><br><span class="line">    random.seed(<span class="number">2022</span>)</span><br><span class="line">    random.shuffle(imgs)</span><br><span class="line">    train_rate = <span class="number">0.8</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"split data -----------&gt;"</span>)</span><br><span class="line">    <span class="keyword">for</span> i, img <span class="keyword">in</span> <span class="built_in">enumerate</span>(tqdm(imgs)):</span><br><span class="line">        ann = img.split(<span class="string">'.'</span>)[<span class="number">0</span>] + label_suffix  <span class="comment"># 根据标签类型更改</span></span><br><span class="line">        <span class="keyword">if</span> i &lt;= <span class="built_in">int</span>(<span class="built_in">len</span>(imgs) * train_rate):</span><br><span class="line">            shutil.copy(img_path + img, img_train_save_path + img)</span><br><span class="line">            shutil.copy(ann_path + ann, ann_train_save_path + ann)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            shutil.copy(img_path + img, img_val_save_path + img)</span><br><span class="line">            shutil.copy(ann_path + ann, ann_val_save_path + ann)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"create train.txt -----------&gt;"</span>)</span><br><span class="line">    train_list = get_filelist(img_train_save_path)</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> <span class="built_in">enumerate</span>(tqdm(train_list)):</span><br><span class="line">        <span class="keyword">if</span> filename[<span class="number">1</span>].endswith(<span class="string">".jpg"</span>):</span><br><span class="line">            train_txt_path = img_train_save_path.rsplit(<span class="string">"/"</span>, <span class="number">2</span>)[<span class="number">0</span>] + <span class="string">"/"</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(train_txt_path + <span class="string">'train.txt'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="built_in">print</span>(os.getcwd() + <span class="string">'/YOLO_data/'</span> + filename[<span class="number">1</span>].split(<span class="string">"/"</span>, <span class="number">2</span>)[<span class="number">2</span>], file=f)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"create val.txt -----------&gt;"</span>)</span><br><span class="line">    val_list = get_filelist(img_val_save_path)</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> <span class="built_in">enumerate</span>(tqdm(val_list)):</span><br><span class="line">        <span class="keyword">if</span> filename[<span class="number">1</span>].endswith(<span class="string">".jpg"</span>):</span><br><span class="line">            val_txt_path = img_val_save_path.rsplit(<span class="string">"/"</span>, <span class="number">2</span>)[<span class="number">0</span>] + <span class="string">"/"</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(val_txt_path + <span class="string">'val.txt'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="built_in">print</span>(os.getcwd() + <span class="string">'/YOLO_data/'</span> + filename[<span class="number">1</span>].split(<span class="string">"/"</span>, <span class="number">2</span>)[<span class="number">2</span>], file=f)</span><br><span class="line">    <span class="built_in">print</span>(time.strftime(<span class="string">'%Y-%m-%d %X'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    img_path = <span class="string">'./YOLO_data/pre_data/processed_data/'</span>  <span class="comment"># 图片路径</span></span><br><span class="line">    ann_path = <span class="string">'./YOLO_data/pre_data/processed_data_label/'</span>  <span class="comment"># 标签路径</span></span><br><span class="line">    img_train_save_path = <span class="string">'./YOLO_data/train/'</span>     <span class="comment"># 训练集保存路径</span></span><br><span class="line">    ann_train_save_path = <span class="string">'./YOLO_data/train/'</span>  <span class="comment"># 训练集标签保存时间</span></span><br><span class="line">    img_val_save_path = <span class="string">'./YOLO_data/val/'</span>     <span class="comment"># 验证集img保存路径</span></span><br><span class="line">    ann_val_save_path = <span class="string">'./YOLO_data/val/'</span>  <span class="comment"># 验证集ann保存路径</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(img_train_save_path):</span><br><span class="line">        os.makedirs(img_train_save_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ann_train_save_path):</span><br><span class="line">        os.makedirs(ann_train_save_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(img_val_save_path):</span><br><span class="line">        os.makedirs(img_val_save_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ann_val_save_path):</span><br><span class="line">        os.makedirs(ann_val_save_path)</span><br><span class="line"></span><br><span class="line">    label_suffix = <span class="string">'.txt'</span><span class="comment"># 标签后缀</span></span><br><span class="line">    spilt_dataset(img_path, ann_path, img_train_save_path, ann_train_save_path, img_val_save_path, ann_val_save_path, label_suffix)</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-修改配置文件"><a href="#3-3-修改配置文件" class="headerlink" title="3.3 修改配置文件"></a>3.3 修改配置文件</h4><blockquote><p>新建文件<code>data/voc-chicken.yaml</code>， 内容如下：</p></blockquote><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">path: <span class="title">E</span>:\<span class="title">practice</span>\20220703<span class="title">_yolo</span>\<span class="title">yolov5_v6_yolo</span>\<span class="title">chciken_head_dataset</span></span></span><br><span class="line"><span class="function"><span class="title">train</span>: <span class="title">train</span></span></span><br><span class="line"><span class="function"><span class="title">val</span>: <span class="title">val</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">number</span> <span class="title">of</span> <span class="title">classes</span></span></span><br><span class="line"><span class="function"><span class="title">nc</span>: 1</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">class</span> <span class="title">names</span></span></span><br><span class="line"><span class="function"><span class="title">names</span>: ['<span class="title">chicken_head</span>']</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>复制models/yolov5s.yaml重命名为models/yolov5s-chicken.yaml 然后修改配置参数：</p></blockquote><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Parameters</span><br><span class="line"><span class="function">nc: 1  # <span class="title">number</span> <span class="title">of</span> <span class="title">classes</span></span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-4-训练数据"><a href="#3-4-训练数据" class="headerlink" title="3.4 训练数据"></a>3.4 训练数据</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python train.py --data data/voc-chicken.yaml --cfg models/yolov5s-chicken.yaml --weights weights/yolov5s.pt --epochs <span class="number">500</span> --device <span class="number">0</span> --batch-size <span class="number">16</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5d5be16ec74a7550aa.png"></p><p><img src="https://pic.imgdb.cn/item/62c420a55be16ec74adcc5e6.png"></p><h3 id="4-训练数据可视化以及性能统计"><a href="#4-训练数据可视化以及性能统计" class="headerlink" title="4. 训练数据可视化以及性能统计"></a>4. 训练数据可视化以及性能统计</h3><figure class="highlight jboss-cli"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Tensorboard</span></span><br><span class="line">pip install tensorboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Tensorboard</span></span><br><span class="line">tensorboard <span class="params">--logdir=</span><span class="string">./runs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动后，在浏览器输入http://localhost:6006/即可</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5e5be16ec74a755124.png"></p><p><img src="https://pic.imgdb.cn/item/62c3dd5e5be16ec74a7552a9.png"></p><h3 id="5-测试训练效果"><a href="#5-测试训练效果" class="headerlink" title="5. 测试训练效果"></a>5. 测试训练效果</h3><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights weights/best.pt --img <span class="number">640</span> --conf <span class="number">0</span>.<span class="number">25</span> --source pic1.png --data data/voc-chicken.yaml</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5f5be16ec74a755387.png"></p><figure class="highlight dsconfig"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试模型效果</span></span><br><span class="line"><span class="string">python</span> <span class="string">val</span>.<span class="string">py</span> <span class="built_in">--weights</span> <span class="string">weights</span>/<span class="string">best</span>.<span class="string">pt</span> <span class="built_in">--img</span> <span class="string">640</span> <span class="built_in">--conf</span> <span class="string">0</span>.<span class="string">25</span> <span class="built_in">--data</span> <span class="string">data</span>/<span class="string">voc-chicken</span>.<span class="string">yaml</span> <span class="built_in">--batch-size</span> <span class="string">8</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5f5be16ec74a7553e3.png"></p><h3 id="6-使用ONNX格式并进行测试"><a href="#6-使用ONNX格式并进行测试" class="headerlink" title="6. 使用ONNX格式并进行测试"></a>6. 使用<code>ONNX</code>格式并进行测试</h3><blockquote><p>查看<code>ONNX</code>模型的结构：</p><p><a href="https://netron.app/">https://netron.app/</a></p></blockquote><h4 id="6-1-将pt模型转换为onnx模型"><a href="#6-1-将pt模型转换为onnx模型" class="headerlink" title="6.1 将pt模型转换为onnx模型"></a>6.1 将<code>pt</code>模型转换为<code>onnx</code>模型</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python export.py --weights weights/best.pt --img <span class="number">640</span> --batch <span class="number">1</span> --opset <span class="number">12</span></span><br></pre></td></tr></tbody></table></figure><h4 id="6-2-通过OpenCV使用ONNX模型"><a href="#6-2-通过OpenCV使用ONNX模型" class="headerlink" title="6.2 通过OpenCV使用ONNX模型"></a>6.2 通过OpenCV使用ONNX模型</h4><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect<span class="selector-class">.py</span> <span class="attr">--weights</span> weights/best<span class="selector-class">.onnx</span> <span class="attr">--dnn</span> <span class="attr">--source</span> pic1<span class="selector-class">.png</span> <span class="attr">--img</span> <span class="number">640</span> <span class="attr">--data</span> data/voc-chicken.yaml</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;YOLOV5-Pytorch-YOLO数据集格式&quot;&gt;&lt;a href=&quot;#YOLOV5-Pytorch-YOLO数据集格式&quot; class=&quot;headerlink&quot; title=&quot;YOLOV5-Pytorch(YOLO数据集格式)&quot;&gt;&lt;/a&gt;YOLOV5-Pytorc</summary>
      
    
    
    
    <category term="Object detection" scheme="http://example.com/categories/Object-detection/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="Object detection" scheme="http://example.com/tags/Object-detection/"/>
    
    <category term="Yolo" scheme="http://example.com/tags/Yolo/"/>
    
  </entry>
  
  <entry>
    <title>YOLOV5-Pytorch(VOC数据集格式)</title>
    <link href="http://example.com/2022/10/12/object_detection/YOLOV5-Pytorch-VOC%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%BC%E5%BC%8F/"/>
    <id>http://example.com/2022/10/12/object_detection/YOLOV5-Pytorch-VOC%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%BC%E5%BC%8F/</id>
    <published>2022-10-12T06:03:20.000Z</published>
    <updated>2022-10-12T06:09:50.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="YOLOV5-Pytorch-VOC数据集格式"><a href="#YOLOV5-Pytorch-VOC数据集格式" class="headerlink" title="YOLOV5-Pytorch(VOC数据集格式)"></a>YOLOV5-Pytorch(VOC数据集格式)</h2><h3 id="1-下载官方代码并进行测试"><a href="#1-下载官方代码并进行测试" class="headerlink" title="1. 下载官方代码并进行测试"></a>1. 下载官方代码并进行测试</h3><h4 id="1-1-克隆github项目到本地"><a href="#1-1-克隆github项目到本地" class="headerlink" title="1.1 克隆github项目到本地"></a>1.1 克隆github项目到本地</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 已更新到v6.<span class="number">1</span>版本</span><br><span class="line">git clone https://github.com/ultralytics/yolov5.git</span><br></pre></td></tr></tbody></table></figure><h4 id="1-2-安装所需库"><a href="#1-2-安装所需库" class="headerlink" title="1.2 安装所需库"></a>1.2 安装所需库</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测试环境: </p><p>python: 3.7.2</p><p>torch: 1.8.1+cu101</p><p>torchvision: 0.9.1+cu101</p><p>tensorboard: 2.9.1</p></blockquote><h4 id="1-3-下载预训练权重文件"><a href="#1-3-下载预训练权重文件" class="headerlink" title="1.3 下载预训练权重文件"></a>1.3 下载预训练权重文件</h4><blockquote><p>创建一个文件夹weights，用于保存下载的权重文件：</p></blockquote><blockquote><p>官网下载地址：</p><p><a href="https://github.com/ultralytics/yolov5/releases">https://github.com/ultralytics/yolov5/releases</a></p><p>本地如果没有下载权重文件，在运行<code>detect.py</code>时程序也会自动下载权重文件。</p></blockquote><p><img src="https://pic.imgdb.cn/item/62c3dd5a5be16ec74a754b02.png"></p><h4 id="1-4-测试检测图片"><a href="#1-4-测试检测图片" class="headerlink" title="1.4 测试检测图片"></a>1.4 测试检测图片</h4><p>进入yolov5文件夹下，在cmd下运行命令：</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 以yolov5s.pt为例</span><br><span class="line">python detect.py --weights weights/yolov5s.pt --img <span class="number">640</span> --conf <span class="number">0</span>.<span class="number">25</span> --source bus.jpg --data data/coco.yaml</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5a5be16ec74a754ba3.jpg"></p><h4 id="1-5-测试检测视频"><a href="#1-5-测试检测视频" class="headerlink" title="1.5 测试检测视频"></a>1.5 测试检测视频</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --source data/test_video.mp4 --weights weights/yolov5n.pt  --data data/coco.yaml</span><br></pre></td></tr></tbody></table></figure><h3 id="2-制作自己的数据集"><a href="#2-制作自己的数据集" class="headerlink" title="2. 制作自己的数据集"></a>2. 制作自己的数据集</h3><h4 id="2-1-重命名图片"><a href="#2-1-重命名图片" class="headerlink" title="2.1 重命名图片"></a>2.1 重命名图片</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> new</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename_files</span>(<span class="params">path</span>):</span><br><span class="line">    filelist = os.listdir(path)</span><br><span class="line">    filelist.sort()</span><br><span class="line">    total_num = <span class="built_in">len</span>(filelist)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"total number: {}"</span>.<span class="built_in">format</span>(total_num))</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> filelist:</span><br><span class="line">        <span class="keyword">if</span> item.endswith(<span class="string">'.jpg'</span>):</span><br><span class="line">            original_name = os.path.join(path, item)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_name = os.path.join(path, <span class="built_in">str</span>(i).zfill(<span class="number">4</span>) + <span class="string">".jpg"</span>)</span><br><span class="line">                i = i + <span class="number">1</span></span><br><span class="line">                os.rename(original_name, new_name)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"{} rename ----&gt; {}"</span>.<span class="built_in">format</span>(original_name, new_name))</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"rename dir fail"</span>)</span><br><span class="line"></span><br><span class="line">path = <span class="string">"./data"</span></span><br><span class="line"></span><br><span class="line">rename_files(path)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5b5be16ec74a754c00.png"></p><h4 id="2-2-缩小图片数据"><a href="#2-2-缩小图片数据" class="headerlink" title="2.2 缩小图片数据"></a>2.2 缩小图片数据</h4><blockquote><p>防止出现图片数据过大，显存溢出的现象。</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resize_images</span>(<span class="params">dirPath, new_dirPath</span>):</span><br><span class="line">    fileName_list = os.listdir(dirPath)</span><br><span class="line">    filePath_list = [os.path.join(dirPath, fileName) <span class="keyword">for</span> fileName <span class="keyword">in</span> fileName_list]</span><br><span class="line">    imagePath_list = [filePath <span class="keyword">for</span> filePath <span class="keyword">in</span> filePath_list <span class="keyword">if</span> <span class="string">'.jpg'</span> <span class="keyword">in</span> filePath]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(new_dirPath):</span><br><span class="line">        os.mkdir(new_dirPath)</span><br><span class="line">    <span class="keyword">for</span> imagePath <span class="keyword">in</span> imagePath_list:</span><br><span class="line">        image = Image.<span class="built_in">open</span>(imagePath)</span><br><span class="line">        width, height = image.size</span><br><span class="line">        imageName = imagePath.split(<span class="string">'\\'</span>)[-<span class="number">1</span>]</span><br><span class="line">        save_path = os.path.join(new_dirPath, imageName)</span><br><span class="line">        <span class="keyword">if</span> width &gt;= <span class="number">600</span> <span class="keyword">and</span> height &gt;= <span class="number">600</span>:</span><br><span class="line">            minification = <span class="built_in">min</span>(width, height) // <span class="number">300</span> <span class="comment">#此变量表示缩小倍数</span></span><br><span class="line">            new_width = width // minification</span><br><span class="line">            new_height = height // minification</span><br><span class="line">            resized_image = image.resize((new_width, new_height), Image.ANTIALIAS)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'图片{}原来的宽{}, 高{}, --------&gt;  图片缩小后宽{}, 高{}'</span> .<span class="built_in">format</span>(imageName, width, height, new_width, new_height))</span><br><span class="line">            resized_image.save(save_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            image.save(save_path)</span><br><span class="line"></span><br><span class="line">resize_images(<span class="string">'data'</span>, <span class="string">'processed_data'</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-安装labelImg"><a href="#2-3-安装labelImg" class="headerlink" title="2.3 安装labelImg"></a>2.3 安装labelImg</h4><figure class="highlight pf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装labelImg</span></span><br><span class="line">pip install <span class="keyword">label</span>Img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动labelImg</span></span><br><span class="line"><span class="keyword">label</span>Img</span><br></pre></td></tr></tbody></table></figure><h4 id="2-4-标记数据"><a href="#2-4-标记数据" class="headerlink" title="2.4 标记数据"></a>2.4 标记数据</h4><ol><li><p>点击<code>Open Dir</code>选择图片数据所在的文件夹，标记格式选择VOC格式；</p><p><img src="https://pic.imgdb.cn/item/62c3dd5b5be16ec74a754ccf.png"></p></li><li><p>按一下<code>w</code>键，即可标记目标数据，选定区域后输入所属的标签；</p><p><img src="https://pic.imgdb.cn/item/62c3dd5c5be16ec74a754e1d.png"></p></li><li><p>按住<code>ctrl+s</code>保存标记的信息；</p><p><img src="https://pic.imgdb.cn/item/62c3dd5c5be16ec74a754ed8.png"></p></li><li><p>切换图片，标记下一张。</p><p><img src="https://pic.imgdb.cn/item/62c3dd5d5be16ec74a755035.png"></p></li></ol><h3 id="3-训练数据"><a href="#3-训练数据" class="headerlink" title="3. 训练数据"></a>3. 训练数据</h3><h4 id="3-1-修改文件夹结构"><a href="#3-1-修改文件夹结构" class="headerlink" title="3.1 修改文件夹结构"></a>3.1 修改文件夹结构</h4><blockquote><p>在yolov5文件夹下创建VOCdevkit / VOC2007文件夹，VOC2007下面建立两个文件夹：Annotations和JPEGImages。</p><p>JPEGImages放所有的训练和测试图片；Annotations放所有的xml标记文件</p></blockquote><h4 id="3-2-预处理训练数据"><a href="#3-2-预处理训练数据" class="headerlink" title="3.2 预处理训练数据"></a>3.2 预处理训练数据</h4><p>在yolov5文件夹里运行代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir, getcwd</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> join</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> shutil <span class="keyword">import</span> copyfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据自己的数据标签修改</span></span><br><span class="line">classes=[<span class="string">"chicken_head"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_hidden_files</span>(<span class="params">path</span>):</span><br><span class="line">    dir_list = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dir_list:</span><br><span class="line">        abspath = os.path.join(os.path.abspath(path), i)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(abspath):</span><br><span class="line">            <span class="keyword">if</span> i.startswith(<span class="string">"._"</span>):</span><br><span class="line">                os.remove(abspath)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            clear_hidden_files(abspath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert</span>(<span class="params">size, box</span>):</span><br><span class="line">    dw = <span class="number">1.</span>/size[<span class="number">0</span>]</span><br><span class="line">    dh = <span class="number">1.</span>/size[<span class="number">1</span>]</span><br><span class="line">    x = (box[<span class="number">0</span>] + box[<span class="number">1</span>])/<span class="number">2.0</span></span><br><span class="line">    y = (box[<span class="number">2</span>] + box[<span class="number">3</span>])/<span class="number">2.0</span></span><br><span class="line">    w = box[<span class="number">1</span>] - box[<span class="number">0</span>]</span><br><span class="line">    h = box[<span class="number">3</span>] - box[<span class="number">2</span>]</span><br><span class="line">    x = x*dw</span><br><span class="line">    w = w*dw</span><br><span class="line">    y = y*dh</span><br><span class="line">    h = h*dh</span><br><span class="line">    <span class="keyword">return</span> (x,y,w,h)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_annotation</span>(<span class="params">image_id</span>):</span><br><span class="line">    in_file = <span class="built_in">open</span>(<span class="string">'VOCdevkit/VOC2007/Annotations/%s.xml'</span> %image_id)</span><br><span class="line">    out_file = <span class="built_in">open</span>(<span class="string">'VOCdevkit/VOC2007/YOLOLabels/%s.txt'</span> %image_id, <span class="string">'w'</span>)</span><br><span class="line">    tree=ET.parse(in_file)</span><br><span class="line">    root = tree.getroot()</span><br><span class="line">    size = root.find(<span class="string">'size'</span>)</span><br><span class="line">    w = <span class="built_in">int</span>(size.find(<span class="string">'width'</span>).text)</span><br><span class="line">    h = <span class="built_in">int</span>(size.find(<span class="string">'height'</span>).text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> root.<span class="built_in">iter</span>(<span class="string">'object'</span>):</span><br><span class="line">        difficult = obj.find(<span class="string">'difficult'</span>).text</span><br><span class="line">        cls = obj.find(<span class="string">'name'</span>).text</span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> classes <span class="keyword">or</span> <span class="built_in">int</span>(difficult) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        cls_id = classes.index(cls)</span><br><span class="line">        xmlbox = obj.find(<span class="string">'bndbox'</span>)</span><br><span class="line">        b = (<span class="built_in">float</span>(xmlbox.find(<span class="string">'xmin'</span>).text), <span class="built_in">float</span>(xmlbox.find(<span class="string">'xmax'</span>).text), <span class="built_in">float</span>(xmlbox.find(<span class="string">'ymin'</span>).text), <span class="built_in">float</span>(xmlbox.find(<span class="string">'ymax'</span>).text))</span><br><span class="line">        bb = convert((w,h), b)</span><br><span class="line">        out_file.write(<span class="built_in">str</span>(cls_id) + <span class="string">" "</span> + <span class="string">" "</span>.join([<span class="built_in">str</span>(a) <span class="keyword">for</span> a <span class="keyword">in</span> bb]) + <span class="string">'\n'</span>)</span><br><span class="line">    in_file.close()</span><br><span class="line">    out_file.close()</span><br><span class="line"></span><br><span class="line">wd = os.getcwd()</span><br><span class="line">wd = os.getcwd()</span><br><span class="line">data_base_dir = os.path.join(wd, <span class="string">"VOCdevkit/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(data_base_dir):</span><br><span class="line">    os.mkdir(data_base_dir)</span><br><span class="line">work_sapce_dir = os.path.join(data_base_dir, <span class="string">"VOC2007/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(work_sapce_dir):</span><br><span class="line">    os.mkdir(work_sapce_dir)</span><br><span class="line">annotation_dir = os.path.join(work_sapce_dir, <span class="string">"Annotations/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(annotation_dir):</span><br><span class="line">        os.mkdir(annotation_dir)</span><br><span class="line">clear_hidden_files(annotation_dir)</span><br><span class="line">image_dir = os.path.join(work_sapce_dir, <span class="string">"JPEGImages/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(image_dir):</span><br><span class="line">        os.mkdir(image_dir)</span><br><span class="line">clear_hidden_files(image_dir)</span><br><span class="line">yolo_labels_dir = os.path.join(work_sapce_dir, <span class="string">"YOLOLabels/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolo_labels_dir):</span><br><span class="line">        os.mkdir(yolo_labels_dir)</span><br><span class="line">clear_hidden_files(yolo_labels_dir)</span><br><span class="line">yolov5_images_dir = os.path.join(data_base_dir, <span class="string">"images/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_images_dir):</span><br><span class="line">        os.mkdir(yolov5_images_dir)</span><br><span class="line">clear_hidden_files(yolov5_images_dir)</span><br><span class="line">yolov5_labels_dir = os.path.join(data_base_dir, <span class="string">"labels/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_labels_dir):</span><br><span class="line">        os.mkdir(yolov5_labels_dir)</span><br><span class="line">clear_hidden_files(yolov5_labels_dir)</span><br><span class="line">yolov5_images_train_dir = os.path.join(yolov5_images_dir, <span class="string">"train/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_images_train_dir):</span><br><span class="line">        os.mkdir(yolov5_images_train_dir)</span><br><span class="line">clear_hidden_files(yolov5_images_train_dir)</span><br><span class="line">yolov5_images_test_dir = os.path.join(yolov5_images_dir, <span class="string">"val/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_images_test_dir):</span><br><span class="line">        os.mkdir(yolov5_images_test_dir)</span><br><span class="line">clear_hidden_files(yolov5_images_test_dir)</span><br><span class="line">yolov5_labels_train_dir = os.path.join(yolov5_labels_dir, <span class="string">"train/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_labels_train_dir):</span><br><span class="line">        os.mkdir(yolov5_labels_train_dir)</span><br><span class="line">clear_hidden_files(yolov5_labels_train_dir)</span><br><span class="line">yolov5_labels_test_dir = os.path.join(yolov5_labels_dir, <span class="string">"val/"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(yolov5_labels_test_dir):</span><br><span class="line">        os.mkdir(yolov5_labels_test_dir)</span><br><span class="line">clear_hidden_files(yolov5_labels_test_dir)</span><br><span class="line"></span><br><span class="line">train_file = <span class="built_in">open</span>(os.path.join(wd, <span class="string">"yolov5_train.txt"</span>), <span class="string">'w'</span>)</span><br><span class="line">test_file = <span class="built_in">open</span>(os.path.join(wd, <span class="string">"yolov5_val.txt"</span>), <span class="string">'w'</span>)</span><br><span class="line">train_file.close()</span><br><span class="line">test_file.close()</span><br><span class="line">train_file = <span class="built_in">open</span>(os.path.join(wd, <span class="string">"yolov5_train.txt"</span>), <span class="string">'a'</span>)</span><br><span class="line">test_file = <span class="built_in">open</span>(os.path.join(wd, <span class="string">"yolov5_val.txt"</span>), <span class="string">'a'</span>)</span><br><span class="line">list_imgs = os.listdir(image_dir) <span class="comment"># list image files</span></span><br><span class="line">probo = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Probobility: %d"</span> % probo)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(list_imgs)):</span><br><span class="line">    path = os.path.join(image_dir,list_imgs[i])</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(path):</span><br><span class="line">        image_path = image_dir + list_imgs[i]</span><br><span class="line">        voc_path = list_imgs[i]</span><br><span class="line">        (nameWithoutExtention, extention) = os.path.splitext(os.path.basename(image_path))</span><br><span class="line">        (voc_nameWithoutExtention, voc_extention) = os.path.splitext(os.path.basename(voc_path))</span><br><span class="line">        annotation_name = nameWithoutExtention + <span class="string">'.xml'</span></span><br><span class="line">        annotation_path = os.path.join(annotation_dir, annotation_name)</span><br><span class="line">        label_name = nameWithoutExtention + <span class="string">'.txt'</span></span><br><span class="line">        label_path = os.path.join(yolo_labels_dir, label_name)</span><br><span class="line">    probo = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Probobility: %d"</span> % probo)</span><br><span class="line">    <span class="keyword">if</span>(probo &lt; <span class="number">80</span>): <span class="comment"># train dataset</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(annotation_path):</span><br><span class="line">            train_file.write(image_path + <span class="string">'\n'</span>)</span><br><span class="line">            convert_annotation(nameWithoutExtention) <span class="comment"># convert label</span></span><br><span class="line">            copyfile(image_path, yolov5_images_train_dir + voc_path)</span><br><span class="line">            copyfile(label_path, yolov5_labels_train_dir + label_name)</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment"># test dataset</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(annotation_path):</span><br><span class="line">            test_file.write(image_path + <span class="string">'\n'</span>)</span><br><span class="line">            convert_annotation(nameWithoutExtention) <span class="comment"># convert label</span></span><br><span class="line">            copyfile(image_path, yolov5_images_test_dir + voc_path)</span><br><span class="line">            copyfile(label_path, yolov5_labels_test_dir + label_name)</span><br><span class="line">train_file.close()</span><br><span class="line">test_file.close()</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-修改配置文件"><a href="#3-3-修改配置文件" class="headerlink" title="3.3 修改配置文件"></a>3.3 修改配置文件</h4><blockquote><p>新建文件<code>data/voc-chicken.yaml</code>， 内容如下：</p></blockquote><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">train: ../<span class="title">yolov5</span>/<span class="title">VOCdevkit</span>/<span class="title">images</span>/<span class="title">train</span>/</span></span><br><span class="line"><span class="function"><span class="title">val</span>: ../<span class="title">yolov5</span>/<span class="title">VOCdevkit</span>/<span class="title">images</span>/<span class="title">val</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">number</span> <span class="title">of</span> <span class="title">classes</span></span></span><br><span class="line"><span class="function"><span class="title">nc</span>: 1</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">class</span> <span class="title">names</span></span></span><br><span class="line"><span class="function"><span class="title">names</span>: ['<span class="title">chicken_head</span>']</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>复制models/yolov5s.yaml重命名为models/yolov5s-chicken.yaml 然后修改配置参数：</p></blockquote><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Parameters</span><br><span class="line"><span class="function">nc: 1  # <span class="title">number</span> <span class="title">of</span> <span class="title">classes</span></span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-4-训练数据"><a href="#3-4-训练数据" class="headerlink" title="3.4 训练数据"></a>3.4 训练数据</h4><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python train.py --data data/voc-chicken.yaml --cfg models/yolov5s-chicken.yaml --weights weights/yolov5s.pt --epochs <span class="number">500</span> --device <span class="number">0</span> --batch-size <span class="number">16</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5d5be16ec74a7550aa.png"></p><p><img src="https://pic.imgdb.cn/item/62c420a55be16ec74adcc5e6.png"></p><h3 id="4-训练数据可视化以及性能统计"><a href="#4-训练数据可视化以及性能统计" class="headerlink" title="4. 训练数据可视化以及性能统计"></a>4. 训练数据可视化以及性能统计</h3><figure class="highlight jboss-cli"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Tensorboard</span></span><br><span class="line">pip install tensorboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Tensorboard</span></span><br><span class="line">tensorboard <span class="params">--logdir=</span><span class="string">./runs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动后，在浏览器输入http://localhost:6006/即可</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5e5be16ec74a755124.png"></p><p><img src="https://pic.imgdb.cn/item/62c3dd5e5be16ec74a7552a9.png"></p><h3 id="5-测试训练效果"><a href="#5-测试训练效果" class="headerlink" title="5. 测试训练效果"></a>5. 测试训练效果</h3><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights weights/best.pt --img <span class="number">640</span> --conf <span class="number">0</span>.<span class="number">25</span> --source pic1.png --data data/voc-chicken.yaml</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5f5be16ec74a755387.png"></p><figure class="highlight dsconfig"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试模型效果</span></span><br><span class="line"><span class="string">python</span> <span class="string">val</span>.<span class="string">py</span> <span class="built_in">--weights</span> <span class="string">weights</span>/<span class="string">best</span>.<span class="string">pt</span> <span class="built_in">--img</span> <span class="string">640</span> <span class="built_in">--conf</span> <span class="string">0</span>.<span class="string">25</span> <span class="built_in">--data</span> <span class="string">data</span>/<span class="string">voc-chicken</span>.<span class="string">yaml</span> <span class="built_in">--batch-size</span> <span class="string">8</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62c3dd5f5be16ec74a7553e3.png"></p><h3 id="6-使用ONNX格式并进行测试"><a href="#6-使用ONNX格式并进行测试" class="headerlink" title="6. 使用ONNX格式并进行测试"></a>6. 使用<code>ONNX</code>格式并进行测试</h3><blockquote><p>查看<code>ONNX</code>模型的结构：</p><p><a href="https://netron.app/">https://netron.app/</a></p></blockquote><h4 id="6-1-将pt模型转换为onnx模型"><a href="#6-1-将pt模型转换为onnx模型" class="headerlink" title="6.1 将pt模型转换为onnx模型"></a>6.1 将<code>pt</code>模型转换为<code>onnx</code>模型</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python export.py --weights weights/best.pt --img <span class="number">640</span> --batch <span class="number">1</span> --opset <span class="number">12</span></span><br></pre></td></tr></tbody></table></figure><h4 id="6-2-通过OpenCV使用ONNX模型"><a href="#6-2-通过OpenCV使用ONNX模型" class="headerlink" title="6.2 通过OpenCV使用ONNX模型"></a>6.2 通过OpenCV使用ONNX模型</h4><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect<span class="selector-class">.py</span> <span class="attr">--weights</span> weights/best<span class="selector-class">.onnx</span> <span class="attr">--dnn</span> <span class="attr">--source</span> pic1<span class="selector-class">.png</span> <span class="attr">--img</span> <span class="number">640</span> <span class="attr">--data</span> data/voc-chicken.yaml</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;YOLOV5-Pytorch-VOC数据集格式&quot;&gt;&lt;a href=&quot;#YOLOV5-Pytorch-VOC数据集格式&quot; class=&quot;headerlink&quot; title=&quot;YOLOV5-Pytorch(VOC数据集格式)&quot;&gt;&lt;/a&gt;YOLOV5-Pytorch(V</summary>
      
    
    
    
    <category term="Object detection" scheme="http://example.com/categories/Object-detection/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="Object detection" scheme="http://example.com/tags/Object-detection/"/>
    
    <category term="Yolo" scheme="http://example.com/tags/Yolo/"/>
    
  </entry>
  
  <entry>
    <title>YOLOV5-ONNX-Flask</title>
    <link href="http://example.com/2022/10/12/object_detection/YOLOV5-ONNX-Flask/"/>
    <id>http://example.com/2022/10/12/object_detection/YOLOV5-ONNX-Flask/</id>
    <published>2022-10-12T06:02:03.000Z</published>
    <updated>2022-10-12T06:09:41.040Z</updated>
    
    <content type="html"><![CDATA[<h3 id="YOLOV5-ONNX-Flask项目部署"><a href="#YOLOV5-ONNX-Flask项目部署" class="headerlink" title="YOLOV5-ONNX-Flask项目部署"></a>YOLOV5-ONNX-Flask项目部署</h3><blockquote><p>Pytorch导出ONNX模型可以参考：</p><p><a href="https://elijah12138.github.io/post/YOLOV5-Pytorch">https://elijah12138.github.io/post/YOLOV5-Pytorch</a></p></blockquote><h3 id="1-下载项目到本地"><a href="#1-下载项目到本地" class="headerlink" title="1. 下载项目到本地"></a>1. 下载项目到本地</h3><blockquote><p>github地址:</p></blockquote><h3 id="2-templates文件夹保存网页信息"><a href="#2-templates文件夹保存网页信息" class="headerlink" title="2. templates文件夹保存网页信息"></a>2. <code>templates</code>文件夹保存网页信息</h3><p><code>index.html</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>YOLOV5-ONNX-Flask项目部署<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>YOLOV5-ONNX-Flask项目部署<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"{{ url_for('video_feed') }}"</span> <span class="attr">width</span>=<span class="string">"960px"</span> <span class="attr">height</span>=<span class="string">"720px"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3-class-names文件夹下保存待检测的类别"><a href="#3-class-names文件夹下保存待检测的类别" class="headerlink" title="3. class.names文件夹下保存待检测的类别"></a>3. <code>class.names</code>文件夹下保存待检测的类别</h3><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">person</span><br><span class="line"><span class="keyword">bicycle</span></span><br><span class="line"><span class="keyword"></span>car</span><br><span class="line">motorcycle</span><br><span class="line">airplane</span><br><span class="line"><span class="keyword">bus</span></span><br><span class="line"><span class="keyword"></span>train</span><br><span class="line">truck</span><br><span class="line"><span class="keyword">boat</span></span><br><span class="line"><span class="keyword"></span>traffic light</span><br><span class="line">fire hydrant</span><br><span class="line">stop sign</span><br><span class="line">parking meter</span><br><span class="line"><span class="keyword">bench</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bird</span></span><br><span class="line"><span class="keyword"></span>cat</span><br><span class="line">dog</span><br><span class="line">horse</span><br><span class="line"><span class="keyword">sheep</span></span><br><span class="line"><span class="keyword"></span>cow</span><br><span class="line">elephant</span><br><span class="line"><span class="keyword">bear</span></span><br><span class="line"><span class="keyword"></span>zebra</span><br><span class="line">giraffe</span><br><span class="line"><span class="keyword">backpack</span></span><br><span class="line"><span class="keyword"></span>umbrella</span><br><span class="line">handbag</span><br><span class="line">tie</span><br><span class="line">suitcase</span><br><span class="line">frisbee</span><br><span class="line">skis</span><br><span class="line">snowboard</span><br><span class="line">sports <span class="keyword">ball</span></span><br><span class="line"><span class="keyword"></span>kite</span><br><span class="line"><span class="keyword">baseball </span><span class="keyword">bat</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">baseball </span>glove</span><br><span class="line">skateboard</span><br><span class="line">surfboard</span><br><span class="line">tennis racket</span><br><span class="line"><span class="keyword">bottle</span></span><br><span class="line"><span class="keyword"></span>wine glass</span><br><span class="line">cup</span><br><span class="line">fork</span><br><span class="line">knife</span><br><span class="line">spoon</span><br><span class="line"><span class="keyword">bowl</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">banana</span></span><br><span class="line"><span class="keyword"></span>apple</span><br><span class="line">sandwich</span><br><span class="line"><span class="keyword">orange</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">broccoli</span></span><br><span class="line"><span class="keyword"></span>carrot</span><br><span class="line">hot dog</span><br><span class="line">pizza</span><br><span class="line">donut</span><br><span class="line">cake</span><br><span class="line">chair</span><br><span class="line">couch</span><br><span class="line">potted plant</span><br><span class="line"><span class="keyword">bed</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">dining </span>table</span><br><span class="line">toilet</span><br><span class="line">tv</span><br><span class="line">laptop</span><br><span class="line">mouse</span><br><span class="line">remote</span><br><span class="line">keyboard</span><br><span class="line">cell phone</span><br><span class="line">microwave</span><br><span class="line">oven</span><br><span class="line">toaster</span><br><span class="line">sink</span><br><span class="line">refrigerator</span><br><span class="line"><span class="keyword">book</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">clock</span></span><br><span class="line"><span class="keyword"></span>vase</span><br><span class="line"><span class="keyword">scissors</span></span><br><span class="line"><span class="keyword"></span>teddy <span class="keyword">bear</span></span><br><span class="line"><span class="keyword"></span>hair drier</span><br><span class="line">toothbrush</span><br></pre></td></tr></tbody></table></figure><h3 id="4-v5-dnn-py-保存调用ONNX模型进行检测的方法"><a href="#4-v5-dnn-py-保存调用ONNX模型进行检测的方法" class="headerlink" title="4. v5_dnn.py 保存调用ONNX模型进行检测的方法"></a>4. <code>v5_dnn.py</code> 保存调用<code>ONNX</code>模型进行检测的方法</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">yolov5</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, modelpath, confThreshold=<span class="number">0.5</span>, nmsThreshold=<span class="number">0.5</span>, objThreshold=<span class="number">0.5</span></span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'class.names'</span>, <span class="string">'rt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            self.classes = f.read().rstrip(<span class="string">'\n'</span>).split(<span class="string">'\n'</span>)</span><br><span class="line">        self.num_classes = <span class="built_in">len</span>(self.classes)</span><br><span class="line">        <span class="keyword">if</span> modelpath.endswith(<span class="string">'6.onnx'</span>):</span><br><span class="line">            self.inpHeight, self.inpWidth = <span class="number">1280</span>, <span class="number">1280</span></span><br><span class="line">            anchors = [[<span class="number">19</span>, <span class="number">27</span>, <span class="number">44</span>, <span class="number">40</span>, <span class="number">38</span>, <span class="number">94</span>], [<span class="number">96</span>, <span class="number">68</span>, <span class="number">86</span>, <span class="number">152</span>, <span class="number">180</span>, <span class="number">137</span>], [<span class="number">140</span>, <span class="number">301</span>, <span class="number">303</span>, <span class="number">264</span>, <span class="number">238</span>, <span class="number">542</span>],</span><br><span class="line">                       [<span class="number">436</span>, <span class="number">615</span>, <span class="number">739</span>, <span class="number">380</span>, <span class="number">925</span>, <span class="number">792</span>]]</span><br><span class="line">            self.stride = np.array([<span class="number">8.</span>, <span class="number">16.</span>, <span class="number">32.</span>, <span class="number">64.</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.inpHeight, self.inpWidth = <span class="number">640</span>, <span class="number">640</span></span><br><span class="line">            anchors = [[<span class="number">10</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">30</span>, <span class="number">33</span>, <span class="number">23</span>], [<span class="number">30</span>, <span class="number">61</span>, <span class="number">62</span>, <span class="number">45</span>, <span class="number">59</span>, <span class="number">119</span>], [<span class="number">116</span>, <span class="number">90</span>, <span class="number">156</span>, <span class="number">198</span>, <span class="number">373</span>, <span class="number">326</span>]]</span><br><span class="line">            self.stride = np.array([<span class="number">8.</span>, <span class="number">16.</span>, <span class="number">32.</span>])</span><br><span class="line">        self.nl = <span class="built_in">len</span>(anchors)</span><br><span class="line">        self.na = <span class="built_in">len</span>(anchors[<span class="number">0</span>]) // <span class="number">2</span></span><br><span class="line">        self.grid = [np.zeros(<span class="number">1</span>)] * self.nl</span><br><span class="line">        self.anchor_grid = np.asarray(anchors, dtype=np.float32).reshape(self.nl, -<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">        self.net = cv2.dnn.readNet(modelpath)</span><br><span class="line">        self.confThreshold = confThreshold</span><br><span class="line">        self.nmsThreshold = nmsThreshold</span><br><span class="line">        self.objThreshold = objThreshold</span><br><span class="line">        self._inputNames = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">resize_image</span>(<span class="params">self, srcimg, keep_ratio=<span class="literal">True</span>, dynamic=<span class="literal">False</span></span>):</span><br><span class="line">        top, left, newh, neww = <span class="number">0</span>, <span class="number">0</span>, self.inpWidth, self.inpHeight</span><br><span class="line">        <span class="keyword">if</span> keep_ratio <span class="keyword">and</span> srcimg.shape[<span class="number">0</span>] != srcimg.shape[<span class="number">1</span>]:</span><br><span class="line">            hw_scale = srcimg.shape[<span class="number">0</span>] / srcimg.shape[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> hw_scale &gt; <span class="number">1</span>:</span><br><span class="line">                newh, neww = self.inpHeight, <span class="built_in">int</span>(self.inpWidth / hw_scale)</span><br><span class="line">                img = cv2.resize(srcimg, (neww, newh), interpolation=cv2.INTER_AREA)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> dynamic:</span><br><span class="line">                    left = <span class="built_in">int</span>((self.inpWidth - neww) * <span class="number">0.5</span>)</span><br><span class="line">                    img = cv2.copyMakeBorder(img, <span class="number">0</span>, <span class="number">0</span>, left, self.inpWidth - neww - left, cv2.BORDER_CONSTANT,</span><br><span class="line">                                             value=(<span class="number">114</span>, <span class="number">114</span>, <span class="number">114</span>))  <span class="comment"># add border</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                newh, neww = <span class="built_in">int</span>(self.inpHeight * hw_scale), self.inpWidth</span><br><span class="line">                img = cv2.resize(srcimg, (neww, newh), interpolation=cv2.INTER_AREA)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> dynamic:</span><br><span class="line">                    top = <span class="built_in">int</span>((self.inpHeight - newh) * <span class="number">0.5</span>)</span><br><span class="line">                    img = cv2.copyMakeBorder(img, top, self.inpHeight - newh - top, <span class="number">0</span>, <span class="number">0</span>, cv2.BORDER_CONSTANT,</span><br><span class="line">                                             value=(<span class="number">114</span>, <span class="number">114</span>, <span class="number">114</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img = cv2.resize(srcimg, (self.inpWidth, self.inpHeight), interpolation=cv2.INTER_AREA)</span><br><span class="line">        <span class="keyword">return</span> img, newh, neww, top, left</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_make_grid</span>(<span class="params">self, nx=<span class="number">20</span>, ny=<span class="number">20</span></span>):</span><br><span class="line">        xv, yv = np.meshgrid(np.arange(ny), np.arange(nx))</span><br><span class="line">        <span class="keyword">return</span> np.stack((xv, yv), <span class="number">2</span>).reshape((-<span class="number">1</span>, <span class="number">2</span>)).astype(np.float32)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">self, img</span>):</span><br><span class="line">        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span><br><span class="line">        img = img.astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">        <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">postprocess</span>(<span class="params">self, frame, outs, padsize=<span class="literal">None</span></span>):</span><br><span class="line">        frameHeight = frame.shape[<span class="number">0</span>]</span><br><span class="line">        frameWidth = frame.shape[<span class="number">1</span>]</span><br><span class="line">        newh, neww, padh, padw = padsize</span><br><span class="line">        ratioh, ratiow = frameHeight / newh, frameWidth / neww</span><br><span class="line">        <span class="comment"># Scan through all the bounding boxes output from the network and keep only the</span></span><br><span class="line">        <span class="comment"># ones with high confidence scores. Assign the box's class label as the class with the highest score.</span></span><br><span class="line"></span><br><span class="line">        confidences = []</span><br><span class="line">        boxes = []</span><br><span class="line">        classIds = []</span><br><span class="line">        <span class="keyword">for</span> detection <span class="keyword">in</span> outs:</span><br><span class="line">            <span class="keyword">if</span> detection[<span class="number">4</span>] &gt; self.objThreshold:</span><br><span class="line">                scores = detection[<span class="number">5</span>:]</span><br><span class="line">                classId = np.argmax(scores)</span><br><span class="line">                confidence = scores[classId] * detection[<span class="number">4</span>]</span><br><span class="line">                <span class="keyword">if</span> confidence &gt; self.confThreshold:</span><br><span class="line">                    center_x = <span class="built_in">int</span>((detection[<span class="number">0</span>] - padw) * ratiow)</span><br><span class="line">                    center_y = <span class="built_in">int</span>((detection[<span class="number">1</span>] - padh) * ratioh)</span><br><span class="line">                    width = <span class="built_in">int</span>(detection[<span class="number">2</span>] * ratiow)</span><br><span class="line">                    height = <span class="built_in">int</span>(detection[<span class="number">3</span>] * ratioh)</span><br><span class="line">                    left = <span class="built_in">int</span>(center_x - width * <span class="number">0.5</span>)</span><br><span class="line">                    top = <span class="built_in">int</span>(center_y - height * <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">                    confidences.append(<span class="built_in">float</span>(confidence))</span><br><span class="line">                    boxes.append([left, top, width, height])</span><br><span class="line">                    classIds.append(classId)</span><br><span class="line">        <span class="comment"># Perform non maximum suppression to eliminate redundant overlapping boxes with</span></span><br><span class="line">        <span class="comment"># lower confidences.</span></span><br><span class="line">        indices = cv2.dnn.NMSBoxes(boxes, confidences, self.confThreshold, self.nmsThreshold)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> indices:</span><br><span class="line">            box = boxes[i]</span><br><span class="line">            left = box[<span class="number">0</span>]</span><br><span class="line">            top = box[<span class="number">1</span>]</span><br><span class="line">            width = box[<span class="number">2</span>]</span><br><span class="line">            height = box[<span class="number">3</span>]</span><br><span class="line">            frame = self.drawPred(frame, classIds[i], confidences[i], left, top, left + width, top + height)</span><br><span class="line">        <span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drawPred</span>(<span class="params">self, frame, classId, conf, left, top, right, bottom</span>):</span><br><span class="line">        cv2.rectangle(frame, (left, top), (right, bottom), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), thickness=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">        label = <span class="string">'%.2f'</span> % conf</span><br><span class="line">        label = <span class="string">'%s:%s'</span> % (self.classes[classId], label)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Display the label at the top of the bounding box</span></span><br><span class="line">        labelSize, baseLine = cv2.getTextSize(label, cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, <span class="number">1</span>)</span><br><span class="line">        top = <span class="built_in">max</span>(top, labelSize[<span class="number">1</span>])</span><br><span class="line">        <span class="comment"># cv.rectangle(frame, (left, top - round(1.5 * labelSize[1])), (left + round(1.5 * labelSize[0]), top + baseLine), (255,255,255), cv.FILLED)</span></span><br><span class="line">        cv2.putText(frame, label, (left, top - <span class="number">10</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), thickness=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">detect</span>(<span class="params">self, srcimg</span>):</span><br><span class="line">        img, newh, neww, padh, padw = self.resize_image(srcimg)</span><br><span class="line">        blob = cv2.dnn.blobFromImage(img, scalefactor=<span class="number">1</span> / <span class="number">255.0</span>, swapRB=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># blob = cv2.dnn.blobFromImage(self.preprocess(img))</span></span><br><span class="line">        <span class="comment"># Sets the input to the network</span></span><br><span class="line">        self.net.setInput(blob, self._inputNames)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Runs the forward pass to get output of the output layers</span></span><br><span class="line">        outs = self.net.forward(self.net.getUnconnectedOutLayersNames())[<span class="number">0</span>].squeeze(axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># inference output</span></span><br><span class="line">        row_ind = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.nl):</span><br><span class="line">            h, w = <span class="built_in">int</span>(self.inpHeight / self.stride[i]), <span class="built_in">int</span>(self.inpWidth / self.stride[i])</span><br><span class="line">            length = <span class="built_in">int</span>(self.na * h * w)</span><br><span class="line">            <span class="keyword">if</span> self.grid[i].shape[<span class="number">2</span>:<span class="number">4</span>] != (h, w):</span><br><span class="line">                self.grid[i] = self._make_grid(w, h)</span><br><span class="line"></span><br><span class="line">            outs[row_ind:row_ind + length, <span class="number">0</span>:<span class="number">2</span>] = (outs[row_ind:row_ind + length, <span class="number">0</span>:<span class="number">2</span>] * <span class="number">2.</span> - <span class="number">0.5</span> + np.tile(</span><br><span class="line">                self.grid[i], (self.na, <span class="number">1</span>))) * <span class="built_in">int</span>(self.stride[i])</span><br><span class="line">            outs[row_ind:row_ind + length, <span class="number">2</span>:<span class="number">4</span>] = (outs[row_ind:row_ind + length, <span class="number">2</span>:<span class="number">4</span>] * <span class="number">2</span>) ** <span class="number">2</span> * np.repeat(</span><br><span class="line">                self.anchor_grid[i], h * w, axis=<span class="number">0</span>)</span><br><span class="line">            row_ind += length</span><br><span class="line"></span><br><span class="line">        srcimg = self.postprocess(srcimg, outs, padsize=(newh, neww, padh, padw))</span><br><span class="line">        <span class="keyword">return</span> srcimg</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    modelpath = <span class="string">'yolov5n.onnx'</span></span><br><span class="line">    confThreshold = <span class="number">0.3</span></span><br><span class="line">    nmsThreshold = <span class="number">0.5</span></span><br><span class="line">    objThreshold = <span class="number">0.3</span></span><br><span class="line"></span><br><span class="line">    yolonet = yolov5(modelpath, confThreshold=confThreshold, nmsThreshold=nmsThreshold,</span><br><span class="line">                     objThreshold=objThreshold)</span><br><span class="line"></span><br><span class="line">    winName = <span class="string">'Deep learning object detection in OpenCV'</span></span><br><span class="line">    cv2.namedWindow(winName, <span class="number">0</span>)</span><br><span class="line">    cap = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">    cap.<span class="built_in">set</span>(<span class="number">3</span>, <span class="number">960</span>)  <span class="comment"># set video width</span></span><br><span class="line">    cap.<span class="built_in">set</span>(<span class="number">4</span>, <span class="number">780</span>)  <span class="comment"># set video height</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        hasMoreFrame, frame = cap.read()</span><br><span class="line">        <span class="keyword">if</span> hasMoreFrame == <span class="literal">True</span>:</span><br><span class="line">            srcimg = yolonet.detect(frame)</span><br><span class="line">            cv2.imshow(winName, srcimg)</span><br><span class="line">            k = cv2.waitKey(<span class="number">20</span>)</span><br><span class="line">            <span class="comment"># q键退出</span></span><br><span class="line">            <span class="keyword">if</span> (k &amp; <span class="number">0xff</span> == <span class="built_in">ord</span>(<span class="string">'q'</span>)):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    cap.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></tbody></table></figure><h3 id="5-app-py保存程序启动信息"><a href="#5-app-py保存程序启动信息" class="headerlink" title="5. app.py保存程序启动信息"></a>5. <code>app.py</code>保存程序启动信息</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> ne</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, Response</span><br><span class="line"><span class="keyword">from</span> v5_dnn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> cv2 <span class="keyword">import</span> getTickCount, getTickFrequency</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VideoCamera</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.video = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        self.video.release()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_frame</span>(<span class="params">self</span>):</span><br><span class="line">        success, image = self.video.read()</span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">'/'</span></span>)  </span><span class="comment"># 主页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">v5_dnn</span>(<span class="params">camera</span>):</span><br><span class="line">    modelpath = <span class="string">'yolov5n.onnx'</span></span><br><span class="line">    confThreshold = <span class="number">0.3</span></span><br><span class="line">    nmsThreshold = <span class="number">0.5</span></span><br><span class="line">    objThreshold = <span class="number">0.3</span></span><br><span class="line">    yolonet = yolov5(modelpath, confThreshold=confThreshold, nmsThreshold=nmsThreshold,</span><br><span class="line">                     objThreshold=objThreshold)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        start = time.clock()</span><br><span class="line">        frame = camera.get_frame()</span><br><span class="line">        yolonet.detect(frame)</span><br><span class="line">        end = time.clock()</span><br><span class="line">        fps = <span class="number">1.</span> / (end - start)</span><br><span class="line">        cv2.putText(frame, <span class="string">"fps= %.2f"</span> % (fps), (<span class="number">0</span>, <span class="number">40</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">        ret, jpeg = cv2.imencode(<span class="string">'.jpg'</span>, frame)</span><br><span class="line">        frame = jpeg.tobytes()</span><br><span class="line">        <span class="keyword">yield</span> (<span class="string">b'--frame\r\n'</span></span><br><span class="line">               <span class="string">b'Content-Type: image/jpeg\r\n\r\n'</span> + frame + <span class="string">b'\r\n\r\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">'/video_feed'</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">video_feed</span>():</span><br><span class="line">    <span class="keyword">return</span> Response(v5_dnn(VideoCamera()),</span><br><span class="line">                    mimetype=<span class="string">'multipart/x-mixed-replace; boundary=frame'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, debug=<span class="literal">True</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;YOLOV5-ONNX-Flask项目部署&quot;&gt;&lt;a href=&quot;#YOLOV5-ONNX-Flask项目部署&quot; class=&quot;headerlink&quot; title=&quot;YOLOV5-ONNX-Flask项目部署&quot;&gt;&lt;/a&gt;YOLOV5-ONNX-Flask项目部署&lt;/</summary>
      
    
    
    
    <category term="Object detection" scheme="http://example.com/categories/Object-detection/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="Object detection" scheme="http://example.com/tags/Object-detection/"/>
    
    <category term="Yolo" scheme="http://example.com/tags/Yolo/"/>
    
    <category term="ONNX" scheme="http://example.com/tags/ONNX/"/>
    
    <category term="Flask" scheme="http://example.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib常用方法</title>
    <link href="http://example.com/2022/10/12/others/Matplotlib%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2022/10/12/others/Matplotlib%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2022-10-12T06:00:56.000Z</published>
    <updated>2022-10-12T06:09:27.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Matplotlib常用方法"><a href="#Matplotlib常用方法" class="headerlink" title="Matplotlib常用方法"></a>Matplotlib常用方法</h2><h3 id="1-Pyplot"><a href="#1-Pyplot" class="headerlink" title="1. Pyplot"></a>1. Pyplot</h3><h4 id="1-1-根据xy数据绘制默认图像"><a href="#1-1-根据xy数据绘制默认图像" class="headerlink" title="1.1 根据xy数据绘制默认图像"></a>1.1 根据xy数据绘制默认图像</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">y = np.random.randint(<span class="number">10</span>, <span class="number">20</span>, size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h4 id="1-2-更改绘图标记"><a href="#1-2-更改绘图标记" class="headerlink" title="1.2 更改绘图标记"></a>1.2 更改绘图标记</h4><h5 id="1-2-1-常用的绘图标记"><a href="#1-2-1-常用的绘图标记" class="headerlink" title="1.2.1 常用的绘图标记"></a>1.2.1 常用的绘图标记</h5><table><thead><tr><th align="center">绘图标记</th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">颜色字符</td><td align="center">b</td><td align="center">蓝色</td></tr><tr><td align="center"></td><td align="center">m</td><td align="center">洋红色</td></tr><tr><td align="center"></td><td align="center">g</td><td align="center">绿色</td></tr><tr><td align="center"></td><td align="center">y</td><td align="center">黄色</td></tr><tr><td align="center"></td><td align="center">r</td><td align="center">红色</td></tr><tr><td align="center"></td><td align="center">k</td><td align="center">黑色</td></tr><tr><td align="center"></td><td align="center">w</td><td align="center">白色</td></tr><tr><td align="center"></td><td align="center">c</td><td align="center">青绿色</td></tr><tr><td align="center"></td><td align="center">#FFD700</td><td align="center">金色</td></tr><tr><td align="center">线型参数</td><td align="center">-</td><td align="center">实线</td></tr><tr><td align="center"></td><td align="center">–</td><td align="center">破折线</td></tr><tr><td align="center"></td><td align="center">-.</td><td align="center">点划线</td></tr><tr><td align="center"></td><td align="center">:</td><td align="center">虚线</td></tr><tr><td align="center">标记字符</td><td align="center">.</td><td align="center">点标记</td></tr><tr><td align="center"></td><td align="center">,</td><td align="center">像素标记</td></tr><tr><td align="center"></td><td align="center">o</td><td align="center">实心圈标记</td></tr><tr><td align="center"></td><td align="center">v</td><td align="center">倒三角标记</td></tr><tr><td align="center"></td><td align="center">^</td><td align="center">上三角标记</td></tr><tr><td align="center"></td><td align="center">&gt;</td><td align="center">右三角标记</td></tr><tr><td align="center"></td><td align="center">&lt;</td><td align="center">左三角标记</td></tr></tbody></table><h5 id="1-2-2-样例"><a href="#1-2-2-样例" class="headerlink" title="1.2.2 样例"></a>1.2.2 样例</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x, y, <span class="string">'g:v'</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只绘制点，不绘制线</span></span><br><span class="line">plt.plot(x, y, <span class="string">'gv'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h3 id="2-轴标签和标题"><a href="#2-轴标签和标题" class="headerlink" title="2. 轴标签和标题"></a>2. 轴标签和标题</h3><h4 id="2-1-设置轴标题"><a href="#2-1-设置轴标题" class="headerlink" title="2.1 设置轴标题"></a>2.1 设置轴标题</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.xlabel(<span class="string">"x"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">'g:v'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h4 id="2-2-设置标题"><a href="#2-2-设置标题" class="headerlink" title="2.2 设置标题"></a>2.2 设置标题</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">"title"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">'g:v'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h3 id="3-网格线"><a href="#3-网格线" class="headerlink" title="3. 网格线"></a>3. 网格线</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">"title"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">'g:v'</span>)</span><br><span class="line"><span class="comment"># axis: 只设置x轴上的网格线</span></span><br><span class="line"><span class="comment"># color: 设置网格线的颜色</span></span><br><span class="line"><span class="comment"># linestyle: 设置网格线的样式</span></span><br><span class="line"><span class="comment"># linewidth: 设置网格线的间隔</span></span><br><span class="line">plt.grid(axis=<span class="string">'x'</span>, color = <span class="string">'y'</span>, linestyle = <span class="string">'--'</span>, linewidth = <span class="number">2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h3 id="4-绘制多图"><a href="#4-绘制多图" class="headerlink" title="4. 绘制多图"></a>4. 绘制多图</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">1</span>, <span class="number">11</span>, <span class="number">1</span>)</span><br><span class="line">y_1 = np.random.randint(<span class="number">10</span>, <span class="number">20</span>, size=<span class="number">10</span>)</span><br><span class="line">y_2 = np.random.randint(<span class="number">10</span>, <span class="number">20</span>, size=<span class="number">10</span>)</span><br><span class="line">y_3 = np.random.randint(<span class="number">15</span>, <span class="number">25</span>, size=<span class="number">10</span>)</span><br><span class="line">y_4 = np.random.randint(<span class="number">15</span>, <span class="number">30</span>, size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(x, y_1)</span><br><span class="line">plt.title(<span class="string">"plot 1"</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(x, y_2)</span><br><span class="line">plt.title(<span class="string">"plot 2"</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">plt.plot(x, y_3)</span><br><span class="line">plt.title(<span class="string">"plot 3"</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">plt.plot(x, y_4)</span><br><span class="line">plt.title(<span class="string">"plot 4"</span>)</span><br><span class="line"></span><br><span class="line">plt.suptitle(<span class="string">"subplot demo"</span>)</span><br><span class="line">plt.subplots_adjust(left=<span class="literal">None</span>, bottom=<span class="literal">None</span>, right=<span class="literal">None</span>, top=<span class="literal">None</span>, wspace=<span class="number">0.5</span>, hspace=<span class="number">0.5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h3 id="5-显示中文"><a href="#5-显示中文" class="headerlink" title="5. 显示中文"></a>5. 显示中文</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 支持中文</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]  <span class="comment"># 用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span>  <span class="comment"># 用来正常显示负号</span></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"图表"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">'g:v'</span>)</span><br><span class="line"><span class="comment"># axis: 只设置x轴上的网格线</span></span><br><span class="line"><span class="comment"># color: 设置网格线的颜色</span></span><br><span class="line"><span class="comment"># linestyle: 设置网格线的样式</span></span><br><span class="line"><span class="comment"># linewidth: 设置网格线的间隔</span></span><br><span class="line">plt.grid(axis=<span class="string">'x'</span>, color = <span class="string">'y'</span>, linestyle = <span class="string">'--'</span>, linewidth = <span class="number">2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h3 id="6-常用的图表"><a href="#6-常用的图表" class="headerlink" title="6. 常用的图表"></a>6. 常用的图表</h3><h4 id="6-1-散点图"><a href="#6-1-散点图" class="headerlink" title="6.1 散点图"></a>6.1 散点图</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">"散点图"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line"><span class="comment"># color: 设置点的颜色</span></span><br><span class="line"><span class="comment"># alpha: 设置点的透明度</span></span><br><span class="line"><span class="comment"># s: 设置点的大小</span></span><br><span class="line">plt.scatter(x, y_1, color=<span class="string">'y'</span>)</span><br><span class="line">plt.scatter(x, y_2, color=<span class="string">'r'</span>, alpha=<span class="number">0.5</span>, s=<span class="number">500</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h4 id="6-2-柱形图"><a href="#6-2-柱形图" class="headerlink" title="6.2. 柱形图"></a>6.2. 柱形图</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">"柱形图"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"><span class="comment"># 纵向的柱形图</span></span><br><span class="line">plt.bar(x, y, color=[<span class="string">'y'</span>, <span class="string">'r'</span>], width=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 横向的柱形图</span></span><br><span class="line"><span class="comment"># plt.barh(x, y, color=['y', 'r'], height=0.5)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h4 id="6-3-饼图"><a href="#6-3-饼图" class="headerlink" title="6.3. 饼图"></a>6.3. 饼图</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">"饼图"</span>, fontsize=<span class="number">30</span>)</span><br><span class="line">y = np.random.randint(<span class="number">10</span>, <span class="number">20</span>, size=<span class="number">5</span>)</span><br><span class="line">plt.pie(y,</span><br><span class="line">    labels=[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>], <span class="comment"># 设置饼图标签</span></span><br><span class="line">    colors=[<span class="string">'k'</span>, <span class="string">'r'</span>, <span class="string">'y'</span>, <span class="string">'m'</span>, <span class="string">'c'</span>], <span class="comment"># 设置饼图颜色</span></span><br><span class="line">    explode=(<span class="number">0</span>, <span class="number">0.3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="comment"># 第二部分突出显示，值越大，距离中心越远</span></span><br><span class="line">    autopct=<span class="string">'%.2f%%'</span>, <span class="comment"># 格式化输出百分比</span></span><br><span class="line">)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Matplotlib常用方法&quot;&gt;&lt;a href=&quot;#Matplotlib常用方法&quot; class=&quot;headerlink&quot; title=&quot;Matplotlib常用方法&quot;&gt;&lt;/a&gt;Matplotlib常用方法&lt;/h2&gt;&lt;h3 id=&quot;1-Pyplot&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="Matplotlib" scheme="http://example.com/categories/Matplotlib/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
    <category term="DL" scheme="http://example.com/tags/DL/"/>
    
    <category term="Matplotlib" scheme="http://example.com/tags/Matplotlib/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>ipynb转换格式</title>
    <link href="http://example.com/2022/10/12/others/ipynb%E8%BD%AC%E6%8D%A2%E6%A0%BC%E5%BC%8F/"/>
    <id>http://example.com/2022/10/12/others/ipynb%E8%BD%AC%E6%8D%A2%E6%A0%BC%E5%BC%8F/</id>
    <published>2022-10-12T06:00:01.000Z</published>
    <updated>2022-10-12T06:00:29.301Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jupyter转换格式"><a href="#jupyter转换格式" class="headerlink" title="jupyter转换格式"></a>jupyter转换格式</h3><h5 id="1-转换为md格式"><a href="#1-转换为md格式" class="headerlink" title="1. 转换为md格式"></a>1. 转换为md格式</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbconvert --to markdown 文件名.ipynb</span><br></pre></td></tr></tbody></table></figure><h5 id="2-转换成pdf格式"><a href="#2-转换成pdf格式" class="headerlink" title="2. 转换成pdf格式"></a>2. 转换成pdf格式</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbconvert --to pdf 文件名.ipynb</span><br></pre></td></tr></tbody></table></figure><h5 id="3-转换成html格式"><a href="#3-转换成html格式" class="headerlink" title="3. 转换成html格式"></a>3. 转换成html格式</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbconvert --to html 文件名.ipynb</span><br></pre></td></tr></tbody></table></figure><h5 id="4-转换成latex格式"><a href="#4-转换成latex格式" class="headerlink" title="4. 转换成latex格式"></a>4. 转换成latex格式</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbconvert --to letex 文件名.ipynb</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;jupyter转换格式&quot;&gt;&lt;a href=&quot;#jupyter转换格式&quot; class=&quot;headerlink&quot; title=&quot;jupyter转换格式&quot;&gt;&lt;/a&gt;jupyter转换格式&lt;/h3&gt;&lt;h5 id=&quot;1-转换为md格式&quot;&gt;&lt;a href=&quot;#1-转换为md格</summary>
      
    
    
    
    <category term="jupyter" scheme="http://example.com/categories/jupyter/"/>
    
    
    <category term="jupyter" scheme="http://example.com/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Git常见问题-OpenSSL SSL_read Connection was reset</title>
    <link href="http://example.com/2022/10/12/git/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-OpenSSL-SSL-read-Connection-was-reset/"/>
    <id>http://example.com/2022/10/12/git/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-OpenSSL-SSL-read-Connection-was-reset/</id>
    <published>2022-10-12T05:59:17.000Z</published>
    <updated>2022-10-12T05:59:45.208Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="attr">--global</span> http<span class="selector-class">.sslVerify</span> <span class="string">"false"</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git常见问题-Deployer not found git</title>
    <link href="http://example.com/2022/10/12/git/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-Deployer-not-found-git/"/>
    <id>http://example.com/2022/10/12/git/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-Deployer-not-found-git/</id>
    <published>2022-10-12T05:58:33.000Z</published>
    <updated>2022-10-12T05:59:01.330Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ada"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Android-ViewModel</title>
    <link href="http://example.com/2022/10/12/android/Android-ViewModel/"/>
    <id>http://example.com/2022/10/12/android/Android-ViewModel/</id>
    <published>2022-10-12T05:57:33.000Z</published>
    <updated>2022-10-12T05:58:20.427Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-ViewModel"><a href="#Android-ViewModel" class="headerlink" title="Android-ViewModel"></a>Android-ViewModel</h3><h4 id="1-ViewModel和ViewModelFactory"><a href="#1-ViewModel和ViewModelFactory" class="headerlink" title="1. ViewModel和ViewModelFactory"></a>1. ViewModel和ViewModelFactory</h4><p>ViewModel类旨在以注重生命周期的方式存储和管理界面相关的数据。ViewModel类让数据可在发生屏幕旋转等配置更改后继续留存。</p><p>[<a href="https://developer.android.google.cn/topic/libraries/architecture/viewmodel?hl=zh-cn%5D">https://developer.android.google.cn/topic/libraries/architecture/viewmodel?hl=zh-cn]</a>: </p><p>在创建ViewModel时一般需要继承ViewModel类</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainViewModel</span>: <span class="type">ViewModel</span>() {</span><br><span class="line">......</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>通常情况下，ViewModel需要一些参数，但是只使用这种继承的方法，无法在构造函数中传递参数，这时，就需要用到<em><strong>ViewModelProvider.Factory</strong></em></p><h4 id="2-代码示例（加法计算）"><a href="#2-代码示例（加法计算）" class="headerlink" title="2. 代码示例（加法计算）"></a>2. 代码示例（加法计算）</h4><h5 id="2-1-在app文件夹下的build-gradle中添加"><a href="#2-1-在app文件夹下的build-gradle中添加" class="headerlink" title="2.1 在app文件夹下的build.gradle中添加"></a>2.1 在app文件夹下的build.gradle中添加</h5><figure class="highlight fsharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">android</span> {</span><br><span class="line"><span class="operator">......</span></span><br><span class="line">    <span class="keyword">buildFeatures</span> {</span><br><span class="line">        dataBinding <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h5 id="2-2-修改activity-main-xml布局文件"><a href="#2-2-修改activity-main-xml布局文件" class="headerlink" title="2.2 修改activity_main.xml布局文件"></a>2.2 修改activity_main.xml布局文件</h5><p>在activity_main.xml文件中添加两个TextView和一个Button控件，并将文件代码转换成databinding格式；</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/button"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"24sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">"0.703"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/editText"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:autofillHints</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"请输入数字"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColorHint</span>=<span class="string">"#78909C"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.497"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">"0.213"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/totalTextView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"TextView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"24sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h5 id="2-3-创建MainActivityViewModel-kt"><a href="#2-3-创建MainActivityViewModel-kt" class="headerlink" title="2.3 创建MainActivityViewModel.kt"></a>2.3 创建MainActivityViewModel.kt</h5><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a3_viewmodel_demo1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.LiveData</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel</span><br><span class="line"></span><br><span class="line"><span class="comment">// MainActivityViewModel需要提供一个初始化参数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivityViewModel</span>(total: <span class="built_in">Int</span>) : ViewModel() {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为保护数据的安全性，创建_total和total</span></span><br><span class="line">    <span class="comment">// _total可以读取和修改，隐藏在当前的ViewModel中</span></span><br><span class="line">    <span class="comment">// total只能读取，暴露给外部</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> _total = MutableLiveData&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">    <span class="keyword">val</span> total: LiveData&lt;<span class="built_in">Int</span>&gt;</span><br><span class="line">        <span class="keyword">get</span>() = _total</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span> {</span><br><span class="line">        _total.value = total</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setTotal</span><span class="params">(inputNum: <span class="type">Int</span>)</span></span> {</span><br><span class="line">        _total.value = _total.value?.plus(inputNum)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h5 id="2-4-创建MainActivityViewModelFactor-kt"><a href="#2-4-创建MainActivityViewModelFactor-kt" class="headerlink" title="2.4 创建MainActivityViewModelFactor.kt"></a>2.4 创建MainActivityViewModelFactor.kt</h5><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a3_viewmodel_demo1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> java.lang.IllegalArgumentException</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入MainActivityViewModel初始化的参数total</span></span><br><span class="line"><span class="comment">// 继承自ViewModelProvider.Factory</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivityViewModelFactor</span>(<span class="keyword">private</span> <span class="keyword">val</span> total: <span class="built_in">Int</span>) : ViewModelProvider.Factory {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T : ViewModel?&gt;</span> <span class="title">create</span><span class="params">(modelClass: <span class="type">Class</span>&lt;<span class="type">T</span>&gt;)</span></span>: T {</span><br><span class="line">        <span class="keyword">if</span> (modelClass.isAssignableFrom(MainActivityViewModel::<span class="keyword">class</span>.java)) {</span><br><span class="line">            <span class="keyword">return</span> MainActivityViewModel(total) <span class="keyword">as</span> T</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">throw</span> IllegalArgumentException(<span class="string">"unknown viewModel"</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h5 id="2-5-修改MainActivity-kt"><a href="#2-5-修改MainActivity-kt" class="headerlink" title="2.5 修改MainActivity.kt"></a>2.5 修改MainActivity.kt</h5><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a3_viewmodel_demo1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Observer</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> com.example.a3_viewmodel_demo1.databinding.ActivityMainBinding</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: ActivityMainBinding</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: MainActivityViewModel</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModelFactor: MainActivityViewModelFactor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        binding = DataBindingUtil.setContentView(<span class="keyword">this</span>, R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建viewModelFactor</span></span><br><span class="line">        viewModelFactor = MainActivityViewModelFactor(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// 使用ViewModelProviderviewModel并通过viewModelFactor传入初始化参数</span></span><br><span class="line">        viewModel = ViewModelProvider(<span class="keyword">this</span>, viewModelFactor).<span class="keyword">get</span>(MainActivityViewModel::<span class="keyword">class</span>.java)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当ViewModel的total值发生变化时，调用该方法将计算的值显示在TextView上</span></span><br><span class="line">        viewModel.total.observe(<span class="keyword">this</span>, Observer {</span><br><span class="line">            binding.totalTextView.text = it.toString()</span><br><span class="line">        })</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听button点击事件，当用户点击时，调用ViewModel的setTotal方法更新_total的值</span></span><br><span class="line">        binding.button.setOnClickListener {</span><br><span class="line">            viewModel.setTotal(binding.editText.text.toString().toInt())</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62f250bf16f2c2beb161c49c.png"></p><p><img src="https://pic.imgdb.cn/item/62f250c016f2c2beb161c942.png"></p><p>屏幕翻转数据不会丢失</p><p><img src="https://pic.imgdb.cn/item/62f250c216f2c2beb161d2e5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-ViewModel&quot;&gt;&lt;a href=&quot;#Android-ViewModel&quot; class=&quot;headerlink&quot; title=&quot;Android-ViewModel&quot;&gt;&lt;/a&gt;Android-ViewModel&lt;/h3&gt;&lt;h4 id=&quot;1-Vie</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
    <category term="Kotlin" scheme="http://example.com/tags/Kotlin/"/>
    
    <category term="Jetpack" scheme="http://example.com/tags/Jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Android-UI常用控件</title>
    <link href="http://example.com/2022/10/12/android/Android-UI%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2022/10/12/android/Android-UI%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6/</id>
    <published>2022-10-12T05:56:39.000Z</published>
    <updated>2022-10-12T05:57:17.094Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-UI常用控件"><a href="#Android-UI常用控件" class="headerlink" title="Android-UI常用控件"></a>Android-UI常用控件</h3><h4 id="1-strings-xml"><a href="#1-strings-xml" class="headerlink" title="1. strings.xml"></a>1. strings.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"app_name"</span>&gt;</span>5_UIDemo<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"textview"</span>&gt;</span>显示<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"button1"</span>&gt;</span>左<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"button2"</span>&gt;</span>右<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"switch1"</span>&gt;</span>开关<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"editText"</span>&gt;</span>请输入百分比<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"button3"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"radiobutton1"</span>&gt;</span>Android<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"radiobutton2"</span>&gt;</span>apple<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"imageView"</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"checkBoxText1"</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"checkBoxText2"</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"checkBoxText3"</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"ratingBar"</span>&gt;</span>评价<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-activity-main-xml"><a href="#2-activity-main-xml" class="headerlink" title="2. activity_main.xml"></a>2. activity_main.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"32dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/textview"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"34sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"205dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_percent</span>=<span class="string">"0.17"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/button1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:ignore</span>=<span class="string">"DuplicateSpeakableTextCheck"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/button2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.579"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline5"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline6"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_percent</span>=<span class="string">"0.25"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.SwitchCompat</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/switch1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/switch1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline6"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline6"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline7"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"235dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/progressBar1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline7"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline7"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/progressBar2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:indeterminate</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline7"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline7"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline8"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"295dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/progressBar3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline8"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline8"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:indeterminateTint</span>=<span class="string">"@color/purple_700"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline9"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"347dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editTextNumber"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"137dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:autofillHints</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"@string/editText"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColorHint</span>=<span class="string">"#757575"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline9"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline9"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/button3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline9"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline9"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_percent</span>=<span class="string">"0.6"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/radioGroup"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"97dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"110dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline10"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/radioButton1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/radiobutton1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"DuplicateSpeakableTextCheck"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/radioButton2"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:minHeight</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/radiobutton2"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"81dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/imageView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/android"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline11"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"534dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">SeekBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/seekBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline11"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline11"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/checkBox1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/checkBoxText1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline13"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline13"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/checkBox2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/checkBoxText2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"@+id/checkBox1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/checkBox1"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/checkBox3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/checkBoxText3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"@+id/checkBox2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@+id/guideline4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/checkBox2"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline13"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"588dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.Guideline</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/guideline14"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"658dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RatingBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ratingBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/ratingBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/guideline14"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@+id/guideline14"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-MainActivity-kt"><a href="#3-MainActivity-kt" class="headerlink" title="3. MainActivity.kt"></a>3. MainActivity.kt</h4><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a5_uidemo</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.widget.SeekBar</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.activity_main.*</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() {</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isNumeric</span><span class="params">(s: <span class="type">String</span>)</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">try</span> {</span><br><span class="line">            s.toDouble()</span><br><span class="line">            <span class="literal">true</span></span><br><span class="line">        } <span class="keyword">catch</span> (e: NumberFormatException) {</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="string">"SetTextI18n"</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        button1.setOnClickListener {</span><br><span class="line">            textView.text = getString(R.string.button1)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        button2.setOnClickListener {</span><br><span class="line">            textView.text = <span class="string">"右"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        switch1.setOnCheckedChangeListener { compoundButton, b -&gt;</span><br><span class="line">            <span class="keyword">if</span> (b) {</span><br><span class="line">                textView.text = <span class="string">"开"</span></span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                textView.text = <span class="string">"关"</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        button3.setOnClickListener {</span><br><span class="line">            <span class="keyword">if</span> (isNumeric(editTextNumber.text.toString())) {</span><br><span class="line">                <span class="keyword">val</span> number = editTextNumber.text.toString().toInt()</span><br><span class="line">                progressBar3.progress = number</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        radioGroup.setOnCheckedChangeListener { radioGroup, i -&gt;</span><br><span class="line">            <span class="keyword">if</span> (i == R.id.radioButton1) {</span><br><span class="line">                imageView.setImageResource(R.drawable.android)</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                imageView.setImageResource(R.drawable.apple)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        seekBar.setOnSeekBarChangeListener(<span class="keyword">object</span> :SeekBar.OnSeekBarChangeListener{</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onProgressChanged</span><span class="params">(p0: <span class="type">SeekBar</span>?, p1: <span class="type">Int</span>, p2: <span class="type">Boolean</span>)</span></span> {</span><br><span class="line">                <span class="comment">//p0 表示是哪个seekbar（以下同理） p1是当前值 p2表示是否是用户改变的值</span></span><br><span class="line">                textView.text = p1.toString()</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartTrackingTouch</span><span class="params">(p0: <span class="type">SeekBar</span>?)</span></span> {<span class="comment">//刚开始触摸的时候</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStopTrackingTouch</span><span class="params">(p0: <span class="type">SeekBar</span>?)</span></span> {<span class="comment">//结束触摸</span></span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> text1 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">var</span> text2 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">var</span> text3 = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        checkBox1.setOnCheckedChangeListener { compoundButton, b -&gt;</span><br><span class="line">            text1 = <span class="keyword">if</span> (b) {</span><br><span class="line">                <span class="string">"文本1"</span></span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="string">""</span></span><br><span class="line">            }</span><br><span class="line">            textView.text = <span class="string">"<span class="variable">$text1</span> <span class="variable">$text2</span> <span class="variable">$text3</span>"</span></span><br><span class="line">        }</span><br><span class="line">        checkBox2.setOnCheckedChangeListener { compoundButton, b -&gt;</span><br><span class="line">            text2 = <span class="keyword">if</span> (b) {</span><br><span class="line">                <span class="string">"文本2"</span></span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="string">""</span></span><br><span class="line">            }</span><br><span class="line">            textView.text = <span class="string">"<span class="variable">$text1</span> <span class="variable">$text2</span> <span class="variable">$text3</span>"</span></span><br><span class="line">        }</span><br><span class="line">        checkBox3.setOnCheckedChangeListener { compoundButton, b -&gt;</span><br><span class="line">            text3 = <span class="keyword">if</span> (b) {</span><br><span class="line">                <span class="string">"文本3"</span></span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="string">""</span></span><br><span class="line">            }</span><br><span class="line">            textView.text = <span class="string">"<span class="variable">$text1</span> <span class="variable">$text2</span> <span class="variable">$text3</span>"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ratingBar.setOnRatingBarChangeListener { ratingBar, fl, b -&gt;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, fl.toString(), Toast.LENGTH_SHORT).show()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-UI常用控件&quot;&gt;&lt;a href=&quot;#Android-UI常用控件&quot; class=&quot;headerlink&quot; title=&quot;Android-UI常用控件&quot;&gt;&lt;/a&gt;Android-UI常用控件&lt;/h3&gt;&lt;h4 id=&quot;1-strings-xml&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
    <category term="Kotlin" scheme="http://example.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Android-enableJetifier</title>
    <link href="http://example.com/2022/10/12/android/Android-enableJetifier/"/>
    <id>http://example.com/2022/10/12/android/Android-enableJetifier/</id>
    <published>2022-10-12T05:48:25.000Z</published>
    <updated>2022-10-12T05:55:42.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-enableJetifier"><a href="#Android-enableJetifier" class="headerlink" title="Android-enableJetifier"></a>Android-enableJetifier</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android.useAndroidX=true</span><br><span class="line">android.enableJetifier=true</span><br></pre></td></tr></tbody></table></figure><blockquote><p><code>AndroidX</code> 是对 <code>android.support.xxx</code> 包的整理后产物。由于之前的 <code>support</code> 包过于混乱，所以，<code>Google</code> 推出了<code>AndroidX</code> <code>android.enableJetifier=true</code> 表示将依赖包也迁移到<code>androidx</code> 。如果取值为<code>false</code>,表示不迁移依赖包到<code>androidx</code>，但在使用依赖包中的内容时可能会出现问题，如果项目中没有使用任何三方依赖，可以设置为<code>false</code>。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-enableJetifier&quot;&gt;&lt;a href=&quot;#Android-enableJetifier&quot; class=&quot;headerlink&quot; title=&quot;Android-enableJetifier&quot;&gt;&lt;/a&gt;Android-enableJetifi</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Adroid" scheme="http://example.com/tags/Adroid/"/>
    
  </entry>
  
  <entry>
    <title>Android-AndroidStudio控制台乱码</title>
    <link href="http://example.com/2022/10/12/android/Android-AndroidStudio%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B9%B1%E7%A0%81/"/>
    <id>http://example.com/2022/10/12/android/Android-AndroidStudio%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B9%B1%E7%A0%81/</id>
    <published>2022-10-12T05:47:30.000Z</published>
    <updated>2022-10-12T05:48:03.978Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-AndroidStudio控制台乱码"><a href="#Android-AndroidStudio控制台乱码" class="headerlink" title="Android-AndroidStudio控制台乱码"></a>Android-AndroidStudio控制台乱码</h3><p>进入路径C:\Program Files\Android\Android Studio\bin下，</p><p>修改studio64.exe.vmoptions 文件，在最后一行添加 -Dfile.encoding=UTF-8，</p><p>重启AndroidStudio。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-AndroidStudio控制台乱码&quot;&gt;&lt;a href=&quot;#Android-AndroidStudio控制台乱码&quot; class=&quot;headerlink&quot; title=&quot;Android-AndroidStudio控制台乱码&quot;&gt;&lt;/a&gt;Android-</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android-android.app.Application cannot be cast to</title>
    <link href="http://example.com/2022/10/12/android/Android-android.app.Application%20cannot%20be%20cast%20to/"/>
    <id>http://example.com/2022/10/12/android/Android-android.app.Application%20cannot%20be%20cast%20to/</id>
    <published>2022-10-12T05:45:13.000Z</published>
    <updated>2022-10-12T05:47:17.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-android-app-Application-cannot-be-cast-to"><a href="#Android-android-app-Application-cannot-be-cast-to" class="headerlink" title="Android-android.app.Application cannot be cast to *"></a>Android-android.app.Application cannot be cast to *</h3><p>在<code>manifest/AndroidManifest.xml</code>中添加</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">" android:name="</span><span class="attr">pakageName.ApplicationName</span>"&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-android-app-Application-cannot-be-cast-to&quot;&gt;&lt;a href=&quot;#Android-android-app-Application-cannot-be-cast-to&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Andorid-底部导航栏</title>
    <link href="http://example.com/2022/10/12/android/Andorid-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F/"/>
    <id>http://example.com/2022/10/12/android/Andorid-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F/</id>
    <published>2022-10-12T05:44:16.000Z</published>
    <updated>2022-10-12T06:08:11.169Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-底部导航栏"><a href="#Android-底部导航栏" class="headerlink" title="Android-底部导航栏"></a>Android-底部导航栏</h3><h4 id="1-创建三个Fragment"><a href="#1-创建三个Fragment" class="headerlink" title="1. 创建三个Fragment"></a>1. 创建三个Fragment</h4><p>| – demo_bottom_navigation</p><p>| – – MainActivity.kt</p><p>| – – ui</p><p>| – – – firstPage</p><p>| – – – – FirstFragment.kt</p><p>| – – – – FirstViewModel.kt</p><p>| – – – secondPage</p><p>| – – – – SecondFragment.kt</p><p>| – – – – SecondViewModel.kt</p><p>| – – – thirdPage</p><p>| – – – –ThirdFragment.kt</p><p>| – – – – ThirdViewModel.kt</p><h4 id="2-添加导航"><a href="#2-添加导航" class="headerlink" title="2. 添加导航"></a>2. 添加导航</h4><ol><li>创建一个navigation资源文件，将三个fragment的xml文件添加进来，</li><li>修改id属性</li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">navigation</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/navigation"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:startDestination</span>=<span class="string">"@id/firstPage"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/firstPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.demo_bottom_navigation.ui.firstPage.FirstFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"fragment_first"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_first"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/secondPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.demo_bottom_navigation.ui.secondPage.SecondFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"fragment_second"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_second"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/thirdPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.demo_bottom_navigation.ui.thirdPage.ThirdFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"fragment_third"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_third"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">navigation</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-修改activity-main-xml文件"><a href="#3-修改activity-main-xml文件" class="headerlink" title="3. 修改activity_main.xml文件"></a>3. 修改activity_main.xml文件</h4><ol><li>添加一个BottomNavigationView控件和TextView控件，</li><li>通过convert view将TextView修改为fragment，</li><li>添加布局</li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.bottomnavigation.BottomNavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?android:attr/windowBackground"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_bottom_menu"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.bottomnavigation.BottomNavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_host_fragment_activity_main"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"androidx.navigation.fragment.NavHostFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navGraph</span>=<span class="string">"@navigation/navigation"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:defaultNavHost</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建菜单"><a href="#4-创建菜单" class="headerlink" title="4. 创建菜单"></a>4. 创建菜单</h4><ol><li>创建一个menu类型的资源文件，</li><li>添加三个Menu Item，</li><li>修改id，title，图标属性</li></ol><blockquote><p>Menu Item的id需要与navigation的id一一对应</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/firstPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_baseline_filter_1_24"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"@string/firstpage"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/secondPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_baseline_filter_2_24"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"@string/secondpage"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/thirdPage"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_baseline_filter_3_24"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"@string/thirdpage"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-修改MainActivity-kt，将底部导航栏和fragment绑定起来"><a href="#5-修改MainActivity-kt，将底部导航栏和fragment绑定起来" class="headerlink" title="5. 修改MainActivity.kt，将底部导航栏和fragment绑定起来"></a>5. 修改MainActivity.kt，将底部导航栏和fragment绑定起来</h4><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo_bottom_navigation</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.findNavController</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.ui.AppBarConfiguration</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.ui.setupActionBarWithNavController</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.ui.setupWithNavController</span><br><span class="line"><span class="keyword">import</span> com.example.demo_bottom_navigation.databinding.ActivityMainBinding</span><br><span class="line"><span class="keyword">import</span> com.google.android.material.bottomnavigation.BottomNavigationView</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: ActivityMainBinding</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// databinding</span></span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将底部导航栏的点击事件与fragment的切换结合起来</span></span><br><span class="line">        <span class="keyword">val</span> navView: BottomNavigationView = binding.navView</span><br><span class="line">        <span class="comment">// 通过findNavController找到activity中的fragment</span></span><br><span class="line">        <span class="keyword">val</span> navController = findNavController(R.id.nav_host_fragment_activity_main)</span><br><span class="line">        <span class="comment">// 添加底部导航栏的跳转逻辑</span></span><br><span class="line">        <span class="comment">// navigation中的id需要和menu中的id一一对应</span></span><br><span class="line">        <span class="keyword">val</span> appBarConfiguration = AppBarConfiguration(</span><br><span class="line">            setOf(</span><br><span class="line">                R.id.firstPage, R.id.secondPage, R.id.thirdPage</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        setupActionBarWithNavController(navController, appBarConfiguration)</span><br><span class="line">        navView.setupWithNavController(navController)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-底部导航栏&quot;&gt;&lt;a href=&quot;#Android-底部导航栏&quot; class=&quot;headerlink&quot; title=&quot;Android-底部导航栏&quot;&gt;&lt;/a&gt;Android-底部导航栏&lt;/h3&gt;&lt;h4 id=&quot;1-创建三个Fragment&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
    <category term="Kotlin" scheme="http://example.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Andorid-okHttp</title>
    <link href="http://example.com/2022/10/12/android/Andorid-okHttp/"/>
    <id>http://example.com/2022/10/12/android/Andorid-okHttp/</id>
    <published>2022-10-12T05:40:53.000Z</published>
    <updated>2022-10-12T05:43:00.356Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-okhttp"><a href="#Android-okhttp" class="headerlink" title="Android-okhttp"></a>Android-okhttp</h3><h4 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1. 添加依赖"></a>1. 添加依赖</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">implementation 'com.squareup.okhttp3:okhttp:4.10.0'</span><br><span class="line">implementation 'com.google.code.gson:gson:2.8.9'</span><br><span class="line">// https://mvnrepository.com/artifact/com.squareup.picasso/picasso</span><br><span class="line">implementation 'com.squareup.picasso:picasso:2.5.2'</span><br></pre></td></tr></tbody></table></figure><h4 id="2-activity-main-xml"><a href="#2-activity-main-xml" class="headerlink" title="2. activity_main.xml"></a>2. activity_main.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"411dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"314dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/image"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">"0.146"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:srcCompat</span>=<span class="string">"@tools:sample/backgrounds/scenic"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">"0.672"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/progressBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0.498"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">"0.3"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-okHttp工具类HttpUtil-kt"><a href="#3-okHttp工具类HttpUtil-kt" class="headerlink" title="3. okHttp工具类HttpUtil.kt"></a>3. okHttp工具类<code>HttpUtil.kt</code></h4><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a14_okhttp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection</span><br><span class="line"><span class="keyword">import</span> java.net.URL</span><br><span class="line"></span><br><span class="line"><span class="keyword">object</span> HttpUtil {</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">sendHttpRequest</span><span class="params">(method: <span class="type">String</span>, address: <span class="type">String</span>, callback: <span class="type">okhttp3</span>.<span class="type">Callback</span>)</span></span> {</span><br><span class="line">        <span class="keyword">val</span> client = OkHttpClient()</span><br><span class="line">        <span class="keyword">val</span> request = Request.Builder()</span><br><span class="line">            .url(address)</span><br><span class="line">            .build()</span><br><span class="line">        client.newCall(request).enqueue(callback)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="4-ImageData-kt数据类"><a href="#4-ImageData-kt数据类" class="headerlink" title="4. ImageData.kt数据类"></a>4. ImageData.kt数据类</h4><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a14_okhttp</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImageData</span> (<span class="keyword">val</span> code:String, <span class="keyword">val</span> imgurl: String, <span class="keyword">val</span> width: String, <span class="keyword">val</span> height: String)</span><br></pre></td></tr></tbody></table></figure><h4 id="5-MainActivity-kt"><a href="#5-MainActivity-kt" class="headerlink" title="5. MainActivity.kt"></a>5. MainActivity.kt</h4><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a14_okhttp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> com.android.volley.Response</span><br><span class="line"><span class="keyword">import</span> com.android.volley.toolbox.StringRequest</span><br><span class="line"><span class="keyword">import</span> com.android.volley.toolbox.Volley</span><br><span class="line"><span class="keyword">import</span> com.example.a14_okhttp.databinding.ActivityMainBinding</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.squareup.picasso.Picasso</span><br><span class="line"><span class="keyword">import</span> okhttp3.Call</span><br><span class="line"><span class="keyword">import</span> okhttp3.Callback</span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request</span><br><span class="line"><span class="keyword">import</span> java.io.IOException</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> kotlin.concurrent.thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line"></span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line"></span><br><span class="line">        binding.progressBar.visibility = View.INVISIBLE</span><br><span class="line"></span><br><span class="line">        binding.button.setOnClickListener {</span><br><span class="line">            binding.progressBar.visibility = View.VISIBLE</span><br><span class="line">            senRequestWithOkHttp()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">senRequestWithOkHttp</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">val</span> address = <span class="string">"https://api.ixiaowai.cn/api/api.php?return=json"</span></span><br><span class="line">        HttpUtil.sendHttpRequest(<span class="string">"get"</span>, address, <span class="keyword">object</span> : Callback {</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResponse</span><span class="params">(call: <span class="type">Call</span>, response: <span class="type">okhttp3</span>.<span class="type">Response</span>)</span></span> {</span><br><span class="line">                <span class="keyword">val</span> responseData = response.body?.string()</span><br><span class="line">                <span class="keyword">if</span> (responseData != <span class="literal">null</span>) {</span><br><span class="line">                    showResponse(responseData)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(call: <span class="type">Call</span>, e: <span class="type">IOException</span>)</span></span> {</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">showResponse</span><span class="params">(response: <span class="type">String</span>)</span></span> {</span><br><span class="line">        runOnUiThread {</span><br><span class="line">            <span class="keyword">val</span> gson = Gson()</span><br><span class="line">            <span class="keyword">val</span> image = gson.fromJson(response, ImageData::<span class="keyword">class</span>.java)</span><br><span class="line">            Picasso.with(applicationContext).load(image.imgurl).into(binding.imageView)</span><br><span class="line">            binding.progressBar.visibility = View.INVISIBLE</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Android-okhttp&quot;&gt;&lt;a href=&quot;#Android-okhttp&quot; class=&quot;headerlink&quot; title=&quot;Android-okhttp&quot;&gt;&lt;/a&gt;Android-okhttp&lt;/h3&gt;&lt;h4 id=&quot;1-添加依赖&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
    <category term="Kotlin" scheme="http://example.com/tags/Kotlin/"/>
    
    <category term="okHttp" scheme="http://example.com/tags/okHttp/"/>
    
  </entry>
  
  <entry>
    <title>Andorid-databinding使用</title>
    <link href="http://example.com/2022/10/12/android/Andorid-databinding%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/10/12/android/Andorid-databinding%E4%BD%BF%E7%94%A8/</id>
    <published>2022-10-12T05:39:02.000Z</published>
    <updated>2022-10-12T06:07:55.276Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Andorid-databinding"><a href="#Andorid-databinding" class="headerlink" title="Andorid-databinding"></a>Andorid-databinding</h3><h4 id="1-在项目build-gradle文件-app文件夹下面的那个-中添加"><a href="#1-在项目build-gradle文件-app文件夹下面的那个-中添加" class="headerlink" title="1. 在项目build.gradle文件( app文件夹下面的那个)中添加"></a>1. 在项目<code>build.gradle</code>文件( <code>app</code>文件夹下面的那个)中添加</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">android {</span><br><span class="line">......</span><br><span class="line">    buildFeatures {</span><br><span class="line">        dataBinding = true</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-修改activity-main-xml文件格式为data-binding-layout"><a href="#2-修改activity-main-xml文件格式为data-binding-layout" class="headerlink" title="2. 修改activity_main.xml文件格式为data binding layout"></a>2. 修改<code>activity_main.xml</code>文件格式为<code>data binding layout</code></h4><ol><li>点击activity_main.xml文件的code选项，查看代码，并将鼠标放在左上角，会弹出一个灯泡形状的提示框；</li></ol><p><img src="https://pic.imgdb.cn/item/62f22ade16f2c2beb1b8f440.png"></p><ol start="2"><li>点击提示框，选择<code>Convert to data binding layout</code></li></ol><p><img src="https://pic.imgdb.cn/item/62f22adf16f2c2beb1b8f7ed.png"></p><ol start="3"><li>代码格式修改完成</li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-在activity-main-xml中添加一个TextView控件"><a href="#3-在activity-main-xml中添加一个TextView控件" class="headerlink" title="3. 在activity_main.xml中添加一个TextView控件"></a>3. 在<code>activity_main.xml</code>中添加一个<code>TextView</code>控件</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"TextView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-在MainActivity-kt文件中修改"><a href="#4-在MainActivity-kt文件中修改" class="headerlink" title="4. 在MainActivity.kt文件中修改"></a>4. 在<code>MainActivity.kt</code>文件中修改</h4><p>修改完<code>activity_main.xml</code>的格式后，系统会为这个布局文件自动创建一个绑定类<code>ActivityMainBinding</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.a1_data_binding</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> com.example.a1_data_binding.databinding.ActivityMainBinding</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: ActivityMainBinding</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        binding = DataBindingUtil.setContentView(<span class="keyword">this</span>, R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过binding.使用布局中的控件</span></span><br><span class="line">        binding.textView.text = <span class="string">"DataBinding"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/62f22d0316f2c2beb1c17a58.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Andorid-databinding&quot;&gt;&lt;a href=&quot;#Andorid-databinding&quot; class=&quot;headerlink&quot; title=&quot;Andorid-databinding&quot;&gt;&lt;/a&gt;Andorid-databinding&lt;/h3&gt;&lt;h4 i</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
    <category term="databinding" scheme="http://example.com/tags/databinding/"/>
    
    <category term="Kotlin" scheme="http://example.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>GAN-Condition GAN</title>
    <link href="http://example.com/2022/10/12/gan/GAN-Condition-GAN/"/>
    <id>http://example.com/2022/10/12/gan/GAN-Condition-GAN/</id>
    <published>2022-10-12T05:21:26.000Z</published>
    <updated>2022-10-15T01:53:21.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>论文地址：<br><a href="https://arxiv.org/abs/1411.1784">https://arxiv.org/abs/1411.1784</a></p></blockquote><h3 id="1-提出的背景"><a href="#1-提出的背景" class="headerlink" title="1. 提出的背景"></a>1. 提出的背景</h3><ol><li>传统的GAN虽然可以生成图像，但是无法控制具体生成图像的种类。例如在生成手写体时，GAN和DCGAN都可以生成0-9这十个数字，但是用户无法指定具体生成那个数字的图像；</li><li>GAN和DCGAN存在模式崩塌现象(Mode collapse(模式坍塌))。</li></ol><h3 id="2-主要思想"><a href="#2-主要思想" class="headerlink" title="2. 主要思想"></a>2. 主要思想</h3><ul><li>GAN主要包括两个网络，一个生成器和一个判别器，GAN的主要优化函数是</li></ul><p>$\begin{array}{c}<br>\min _{G} \max _{D} V(D, G)=\mathbb{E} x \sim p d a t a(x)[\log D(x)] \<br>+\mathbb{E} z \sim p d a t a(z)[\log (1-D(G(z)))]<br>\end{array}$<br>CGAN与传统的GAN相比，区别就是增加了标签作为训练的一个输入，CGAN的优化函数为<br>$\min <em>{G} \max <em>{D} V(D, G)=\mathbb{E}</em>{x \sim p \text { data }(x)}[\log D(x \mid y)]+\mathbb{E}</em>{z \sim p \text { data }(z)}[\log (1-D(G(z \mid y)))]$</p><ul><li>结构图：</li></ul><p><img src="https://pic1.imgdb.cn/item/634a122416f2c2beb19d4c4b.jpg#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=MzGA8&amp;originHeight=376&amp;originWidth=700&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><h3 id="3-具体实现"><a href="#3-具体实现" class="headerlink" title="3. 具体实现"></a>3. 具体实现</h3><ol><li><p>生成器</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Generator</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Generator, self).__init__()</span><br><span class="line">        <span class="comment"># 两个128 x 7 x 7 cat后依然为256 x 7 x 7</span></span><br><span class="line">        self.linear1 = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">100</span>, <span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">        )</span><br><span class="line">        self.linear2 = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">10</span>, <span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.model = nn.Sequential(</span><br><span class="line">            <span class="comment"># 128 x 7 x 7</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">256</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">            <span class="comment"># 64 x 14 x 14</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">128</span>, <span class="number">64</span>, kernel_size=<span class="number">4</span>, stride=<span class="number">2</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            <span class="comment"># 1 x 28 x 28</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">64</span>, <span class="number">1</span>, kernel_size=<span class="number">4</span>, stride=<span class="number">2</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.Tanh()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, c</span>):</span><br><span class="line">        x = self.linear1(x)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">128</span>, <span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line">        c = self.linear2(c)</span><br><span class="line">        c = c.view(-<span class="number">1</span>, <span class="number">128</span>, <span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line">        <span class="comment"># 256 x 7 x 7</span></span><br><span class="line">        <span class="comment"># 在channels方面合并</span></span><br><span class="line">        x = torch.cat([x, c], dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> self.model(x)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>判别器接收两个输入，一个是随机噪声，一个是标签，将噪声和标签转换为长度128x7x7的向量，再将两个向量连接起来，构成一个256x7x7的向量，再进行三次的转置卷积，最终输出一个1x28x28（与mnist数据集的大小保持一致）的图像。</p></li><li><p>判别器</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Discriminator</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Discriminator, self).__init__()</span><br><span class="line">        <span class="comment"># input: 1 x 28 x 28 + 10 condition</span></span><br><span class="line">        self.linear = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">10</span>, <span class="number">1</span> * <span class="number">28</span> * <span class="number">28</span>),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.model = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">2</span>, <span class="number">64</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.LeakyReLU(),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.3</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.LeakyReLU(),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">128</span> * <span class="number">6</span> * <span class="number">6</span>, <span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, c</span>):</span><br><span class="line">        c = self.linear(c)</span><br><span class="line">        c = c.view(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line">        <span class="comment"># 2 x 28 x 28</span></span><br><span class="line">        x = torch.cat([x, c], dim=<span class="number">1</span>)</span><br><span class="line">        x = self.model(x)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">128</span> * <span class="number">6</span> * <span class="number">6</span>)</span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></tbody></table></figure><p>判别器也是接收两个参数，一个是图像（可能是真实图像，也可能是生成的虚假的图像），另一个是标签，首先将标签转换为1x28x28的形状，然后将这个向量和图像连接起来，构成一个2x28x28的向量，最后经过卷积、激活、池化、线形层输出一个结果（真或者假）。</p></li><li><p>训练</p></li></ol><ul><li>训练判别器</li></ul><p>判别器要尽可能地区分出真实图片和虚假的图片；<br>将真实的图像和标签放入到判别器中，计算判别器输出与1之间的损失；<br>根据噪声生成虚假的图片，将虚假的图片和标签放入到判别器中，计算判别器输出和0之间的损失；<br>反向传播、迭代优化。</p><ul><li>训练生成器</li></ul><p>生成器要尽可能的使生成的图像接近真实的图像，让判别器无法判断出图片的来源（真实还是生成）；<br>将生成的虚假的图片放入到判别器中，计算判别器的输出与1之间的损失；<br>反向传播、迭代优化。</p><h3 id="4-代码"><a href="#4-代码" class="headerlink" title="4. 代码"></a>4. 代码</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn, cuda</span><br><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">"KMP_DUPLICATE_LIB_OK"</span>] = <span class="string">"TRUE"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">one_hot</span>(<span class="params">x, class_count=<span class="number">10</span></span>):</span><br><span class="line">    <span class="keyword">return</span> torch.eye(class_count)[x, :]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Generator</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Generator, self).__init__()</span><br><span class="line">        <span class="comment"># 两个128 x 7 x 7 cat后依然为256 x 7 x 7</span></span><br><span class="line">        self.linear1 = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">100</span>, <span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">        )</span><br><span class="line">        self.linear2 = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">10</span>, <span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span> * <span class="number">7</span> * <span class="number">7</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.model = nn.Sequential(</span><br><span class="line">            <span class="comment"># 128 x 7 x 7</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">256</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">            <span class="comment"># 64 x 14 x 14</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">128</span>, <span class="number">64</span>, kernel_size=<span class="number">4</span>, stride=<span class="number">2</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            <span class="comment"># 1 x 28 x 28</span></span><br><span class="line">            nn.ConvTranspose2d(<span class="number">64</span>, <span class="number">1</span>, kernel_size=<span class="number">4</span>, stride=<span class="number">2</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.Tanh()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, c</span>):</span><br><span class="line">        x = self.linear1(x)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">128</span>, <span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line">        c = self.linear2(c)</span><br><span class="line">        c = c.view(-<span class="number">1</span>, <span class="number">128</span>, <span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line">        <span class="comment"># 256 x 7 x 7</span></span><br><span class="line">        <span class="comment"># 在channels方面合并</span></span><br><span class="line">        x = torch.cat([x, c], dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> self.model(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Discriminator</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Discriminator, self).__init__()</span><br><span class="line">        <span class="comment"># input: 1 x 28 x 28 + 10 condition</span></span><br><span class="line">        self.linear = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">10</span>, <span class="number">1</span> * <span class="number">28</span> * <span class="number">28</span>),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.model = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">2</span>, <span class="number">64</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.LeakyReLU(),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.3</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.LeakyReLU(),</span><br><span class="line">            nn.Dropout(p=<span class="number">0.3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">128</span> * <span class="number">6</span> * <span class="number">6</span>, <span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, c</span>):</span><br><span class="line">        c = self.linear(c)</span><br><span class="line">        c = c.view(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line">        <span class="comment"># 2 x 28 x 28</span></span><br><span class="line">        x = torch.cat([x, c], dim=<span class="number">1</span>)</span><br><span class="line">        x = self.model(x)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">128</span> * <span class="number">6</span> * <span class="number">6</span>)</span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize(mean=<span class="number">0.5</span>, std=<span class="number">0.5</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.MNIST(<span class="string">"./data"</span>, train=<span class="literal">True</span>,</span><br><span class="line">                                     transform=transform,</span><br><span class="line">                                     download=<span class="literal">True</span>,</span><br><span class="line">                                     target_transform=one_hot)</span><br><span class="line"></span><br><span class="line">dataloader = data.DataLoader(dataset, batch_size=<span class="number">512</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">device = <span class="string">"cuda"</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">"cpu"</span></span><br><span class="line">gen = Generator().to(device)</span><br><span class="line">disc = Discriminator().to(device)</span><br><span class="line">loss_fn = torch.nn.BCELoss()</span><br><span class="line">opt_g = torch.optim.RMSprop(gen.parameters(), lr=<span class="number">0.0001</span>)</span><br><span class="line">opt_d = torch.optim.Adam(disc.parameters(), lr=<span class="number">0.0001</span>)</span><br><span class="line">num_epochs = <span class="number">201</span></span><br><span class="line"></span><br><span class="line">writer_g = SummaryWriter(<span class="string">"/root/tf-logs/g"</span>)</span><br><span class="line">writer_d = SummaryWriter(<span class="string">"/root/tf-logs/d"</span>)</span><br><span class="line"></span><br><span class="line">noise_seed = torch.randn(<span class="number">16</span>, <span class="number">100</span>, device=device)</span><br><span class="line"><span class="comment"># 16个0-10之间的随机整数</span></span><br><span class="line">label_seed = torch.randint(<span class="number">0</span>, <span class="number">10</span>, size=(<span class="number">16</span>,))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f"label seed: <span class="subst">{label_seed}</span>"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(label_seed))</span><br><span class="line">label_seed_onehot = one_hot(label_seed).to(device)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f"label_seed: <span class="subst">{label_seed}</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    D_epoch_loss = <span class="number">0</span></span><br><span class="line">    G_epoch_loss = <span class="number">0</span></span><br><span class="line">    count = <span class="built_in">len</span>(dataset)</span><br><span class="line">    loop = tqdm(dataloader, leave=<span class="literal">True</span>, desc=<span class="string">f"Epoch: <span class="subst">{epoch}</span>/<span class="subst">{num_epochs}</span>"</span>)</span><br><span class="line">    <span class="keyword">for</span> step, (img, label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(loop):</span><br><span class="line">        img = img.to(device)</span><br><span class="line">        label = label.to(device)</span><br><span class="line">        size = img.shape[<span class="number">0</span>]</span><br><span class="line">        random_seed = torch.randn(size, <span class="number">100</span>, device=device)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 训练判别器</span></span><br><span class="line">        opt_d.zero_grad()</span><br><span class="line">        <span class="comment"># 真实图片放入判别器中</span></span><br><span class="line">        real_output = disc(img, label)</span><br><span class="line">        d_real_loss = loss_fn(real_output, torch.ones_like(real_output, device=device))</span><br><span class="line">        <span class="comment"># 生成图像并放入判别器中</span></span><br><span class="line">        gen_img = gen(random_seed, label)</span><br><span class="line">        fake_output = disc(gen_img.detach(), label)</span><br><span class="line">        d_fake_loss = loss_fn(fake_output, torch.zeros_like(fake_output, device=device))</span><br><span class="line">        d_loss = (d_real_loss + d_fake_loss) / <span class="number">2</span></span><br><span class="line">        d_loss.backward()</span><br><span class="line">        opt_d.step()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 训练生成器</span></span><br><span class="line">        opt_g.zero_grad()</span><br><span class="line">        fake_output = disc(gen_img, label)</span><br><span class="line">        g_loss = loss_fn(fake_output, torch.ones_like(fake_output, device=device))</span><br><span class="line">        g_loss.backward()</span><br><span class="line">        opt_g.step()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">            D_epoch_loss += d_loss.item()</span><br><span class="line">            G_epoch_loss += g_loss.item()</span><br><span class="line">            loop.set_postfix(G_loss=<span class="string">f"<span class="subst">{np.<span class="built_in">round</span>(G_epoch_loss, <span class="number">2</span>)}</span>"</span>, D_loss=<span class="string">f"<span class="subst">{np.<span class="built_in">round</span>(D_epoch_loss, <span class="number">2</span>)}</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        D_epoch_loss /= count</span><br><span class="line">        G_epoch_loss /= count</span><br><span class="line">        writer_g.add_scalar(<span class="string">"loss"</span>, G_epoch_loss, epoch)</span><br><span class="line">        writer_d.add_scalar(<span class="string">"loss"</span>, D_epoch_loss, epoch)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> epoch % <span class="number">20</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">                gen_img = gen(noise_seed, label_seed_onehot)</span><br><span class="line">                writer_g.add_images(<span class="string">"gen mnist"</span>, gen_img, epoch)</span><br><span class="line"></span><br><span class="line">torch.save(gen.state_dict(), <span class="string">"./gen.pth"</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="5-训练结果"><a href="#5-训练结果" class="headerlink" title="5. 训练结果"></a>5. 训练结果</h3><p><img src="https://pic1.imgdb.cn/item/634a125216f2c2beb19d8ee0.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=QjMRz&amp;originHeight=108&amp;originWidth=434&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></p><h3 id="5-参考资料"><a href="#5-参考资料" class="headerlink" title="5. 参考资料"></a>5. 参考资料</h3><ol><li><a href="https://arxiv.org/abs/1411.1784">https://arxiv.org/abs/1411.1784</a></li><li><a href="https://blog.csdn.net/qq_41647438/article/details/103007057">https://blog.csdn.net/qq_41647438/article/details/103007057</a></li><li><a href="https://blog.csdn.net/xjp_xujiping/article/details/102719363">https://blog.csdn.net/xjp_xujiping/article/details/102719363</a></li><li><a href="https://zhuanlan.zhihu.com/p/510346635">https://zhuanlan.zhihu.com/p/510346635</a></li><li><a href="https://www.jianshu.com/p/39c57e9a6630">https://www.jianshu.com/p/39c57e9a6630</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;论文地址：&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1411.1784&quot;&gt;https://arxiv.org/abs/1411.1784&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-提出的背景&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="GAN" scheme="http://example.com/categories/GAN/"/>
    
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
    <category term="GAN" scheme="http://example.com/tags/GAN/"/>
    
    <category term="CGAN" scheme="http://example.com/tags/CGAN/"/>
    
  </entry>
  
</feed>
